/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module TagLibD_im;

static import std.conv;

static import std.conv;
static import std.string;


private {
  version(linux) {
    version = Nix;
  } else version(darwin) {
    version = Nix;
  } else version(OSX) {
    version = Nix;
  } else version(FreeBSD) {
    version = Nix;
    version = freebsd;
  } else version(freebsd) {
    version = Nix;
  } else version(Unix) {
    version = Nix;
  } else version(Posix) {
    version = Nix;
  }

  version(Tango) {
    static import tango.stdc.string;
    static import tango.stdc.stringz;

    version (PhobosCompatibility) {
    } else {
      alias char[] string;
      alias wchar[] wstring;
      alias dchar[] dstring;
    }
  } else {
    version(D_Version2) {
      static import std.conv;
    }
    static import std.string;
    static import std.c.string;
  }

  version(D_Version2) {
    mixin("alias const(char)* CCPTR;");
  } else {
    alias char* CCPTR;
  }

  CCPTR swigToCString(string str) {
    version(Tango) {
      return tango.stdc.stringz.toStringz(str);
    } else {
      return std.string.toStringz(str);
    }
  }

  string swigToDString(CCPTR cstr) {
    version(Tango) {
      return tango.stdc.stringz.fromStringz(cstr);
    } else {
      version(D_Version2) {
        mixin("return std.conv.to!string(cstr);");
      } else {
        return std.c.string.toString(cstr);
      }
    }
  }
}

class SwigSwigSharedLibLoadException : Exception {
  this(in string[] libNames, in string[] reasons) {
    string msg = "Failed to load one or more shared libraries:";
    foreach(i, n; libNames) {
      msg ~= "\n\t" ~ n ~ " - ";
      if(i < reasons.length)
        msg ~= reasons[i];
      else
        msg ~= "Unknown";
    }
    super(msg);
  }
}

class SwigSymbolLoadException : Exception {
  this(string SwigSharedLibName, string symbolName) {
    super("Failed to load symbol " ~ symbolName ~ " from shared library " ~ SwigSharedLibName);
    _symbolName = symbolName;
  }

  string symbolName() {
    return _symbolName;
  }

private:
  string _symbolName;
}

private {
  version(Nix) {
    version(freebsd) {
      // the dl* functions are in libc on FreeBSD
    }
    else {
      pragma(lib, "dl");
    }

    version(Tango) {
      import tango.sys.Common;
    } else version(linux) {
      import std.c.linux.linux;
    } else {
      extern(C) {
        const RTLD_NOW = 2;

        void *dlopen(CCPTR file, int mode);
        int dlclose(void* handle);
        void *dlsym(void* handle, CCPTR name);
        CCPTR dlerror();
      }
    }

    alias void* SwigSharedLibHandle;

    SwigSharedLibHandle swigLoadSharedLib(string libName) {
      return dlopen(swigToCString(libName), RTLD_NOW);
    }

    void swigUnloadSharedLib(SwigSharedLibHandle hlib) {
      dlclose(hlib);
    }

    void* swigGetSymbol(SwigSharedLibHandle hlib, string symbolName) {
      return dlsym(hlib, swigToCString(symbolName));
    }

    string swigGetErrorStr() {
      CCPTR err = dlerror();
      if (err is null) {
        return "Unknown Error";
      }
      return swigToDString(err);
    }
  } else version(Windows) {
    alias ushort WORD;
    alias uint DWORD;
    alias CCPTR LPCSTR;
    alias void* HMODULE;
    alias void* HLOCAL;
    alias int function() FARPROC;
    struct VA_LIST {}

    extern (Windows) {
      HMODULE LoadLibraryA(LPCSTR);
      FARPROC GetProcAddress(HMODULE, LPCSTR);
      void FreeLibrary(HMODULE);
      DWORD GetLastError();
      DWORD FormatMessageA(DWORD, in void*, DWORD, DWORD, LPCSTR, DWORD, VA_LIST*);
      HLOCAL LocalFree(HLOCAL);
    }

    DWORD MAKELANGID(WORD p, WORD s) {
      return (((cast(WORD)s) << 10) | cast(WORD)p);
    }

    enum {
      LANG_NEUTRAL                    = 0,
      SUBLANG_DEFAULT                 = 1,
      FORMAT_MESSAGE_ALLOCATE_BUFFER  = 256,
      FORMAT_MESSAGE_IGNORE_INSERTS   = 512,
      FORMAT_MESSAGE_FROM_SYSTEM      = 4096
    }

    alias HMODULE SwigSharedLibHandle;

    SwigSharedLibHandle swigLoadSharedLib(string libName) {
      return LoadLibraryA(swigToCString(libName));
    }

    void swigUnloadSharedLib(SwigSharedLibHandle hlib) {
      FreeLibrary(hlib);
    }

    void* swigGetSymbol(SwigSharedLibHandle hlib, string symbolName) {
      return GetProcAddress(hlib, swigToCString(symbolName));
    }

    string swigGetErrorStr() {
      DWORD errcode = GetLastError();

      LPCSTR msgBuf;
      DWORD i = FormatMessageA(
        FORMAT_MESSAGE_ALLOCATE_BUFFER |
        FORMAT_MESSAGE_FROM_SYSTEM |
        FORMAT_MESSAGE_IGNORE_INSERTS,
        null,
        errcode,
        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
        cast(LPCSTR)&msgBuf,
        0,
        null);

      string text = swigToDString(msgBuf);
      LocalFree(cast(HLOCAL)msgBuf);

      if (i >= 2) {
        i -= 2;
      }
      return text[0 .. i];
    }
  } else {
    static assert(0, "Operating system not supported by the wrapper loading code.");
  }

  final class SwigSharedLib {
    void load(string[] names) {
      if (_hlib !is null) return;

      string[] failedLibs;
      string[] reasons;

      foreach(n; names) {
        _hlib = swigLoadSharedLib(n);
        if (_hlib is null) {
          failedLibs ~= n;
          reasons ~= swigGetErrorStr();
          continue;
        }
        _name = n;
        break;
      }

      if (_hlib is null) {
        throw new SwigSwigSharedLibLoadException(failedLibs, reasons);
      }
    }

    void* loadSymbol(string symbolName, bool doThrow = true) {
      void* sym = swigGetSymbol(_hlib, symbolName);
      if(doThrow && (sym is null)) {
        throw new SwigSymbolLoadException(_name, symbolName);
      }
      return sym;
    }

    void unload() {
      if(_hlib !is null) {
        swigUnloadSharedLib(_hlib);
        _hlib = null;
      }
    }

  private:
    string _name;
    SwigSharedLibHandle _hlib;
  }
}

static this() {
  string[] possibleFileNames;
  version (Posix) {
    version (OSX) {
      possibleFileNames ~= ["libTagLibD_wrap.dylib", "libTagLibD_wrap.bundle"];
    }
    possibleFileNames ~= ["libTagLibD_wrap.so"];
  } else version (Windows) {
    possibleFileNames ~= ["TagLibD_wrap.dll", "libTagLibD_wrap.so"];
  } else {
    static assert(false, "Operating system not supported by the wrapper loading code.");
  }

  auto library = new SwigSharedLib;
  library.load(possibleFileNames);

  string bindCode(string functionPointer, string symbol) {
    return functionPointer ~ " = cast(typeof(" ~ functionPointer ~
      "))library.loadSymbol(`" ~ symbol ~ "`);";
  }

  //#if !defined(SWIG_D_NO_EXCEPTION_HELPER)
  mixin(bindCode("swigRegisterExceptionCallbacks", "SWIGRegisterExceptionCallbacks_TagLibD"));
  //#endif // SWIG_D_NO_EXCEPTION_HELPER
  //#if !defined(SWIG_D_NO_STRING_HELPER)
  mixin(bindCode("swigRegisterStringCallback", "SWIGRegisterStringCallback_TagLibD"));
  //#endif // SWIG_D_NO_STRING_HELPER
  
  mixin(bindCode("TAGLIB_MAJOR_VERSION_get", "D_TAGLIB_MAJOR_VERSION_get"));
  mixin(bindCode("TAGLIB_MINOR_VERSION_get", "D_TAGLIB_MINOR_VERSION_get"));
  mixin(bindCode("TAGLIB_PATCH_VERSION_get", "D_TAGLIB_PATCH_VERSION_get"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_0", "D_new_TagLib_ByteVector__SWIG_0"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_1", "D_new_TagLib_ByteVector__SWIG_1"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_2", "D_new_TagLib_ByteVector__SWIG_2"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_3", "D_new_TagLib_ByteVector__SWIG_3"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_4", "D_new_TagLib_ByteVector__SWIG_4"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_5", "D_new_TagLib_ByteVector__SWIG_5"));
  mixin(bindCode("new_TagLib_ByteVector__SWIG_6", "D_new_TagLib_ByteVector__SWIG_6"));
  mixin(bindCode("delete_TagLib_ByteVector", "D_delete_TagLib_ByteVector"));
  mixin(bindCode("TagLib_ByteVector_setData__SWIG_0", "D_TagLib_ByteVector_setData__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_setData__SWIG_1", "D_TagLib_ByteVector_setData__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_data__SWIG_0", "D_TagLib_ByteVector_data__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_mid__SWIG_0", "D_TagLib_ByteVector_mid__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_mid__SWIG_1", "D_TagLib_ByteVector_mid__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_at", "D_TagLib_ByteVector_at"));
  mixin(bindCode("TagLib_ByteVector_find__SWIG_0", "D_TagLib_ByteVector_find__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_find__SWIG_1", "D_TagLib_ByteVector_find__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_find__SWIG_2", "D_TagLib_ByteVector_find__SWIG_2"));
  mixin(bindCode("TagLib_ByteVector_rfind__SWIG_0", "D_TagLib_ByteVector_rfind__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_rfind__SWIG_1", "D_TagLib_ByteVector_rfind__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_rfind__SWIG_2", "D_TagLib_ByteVector_rfind__SWIG_2"));
  mixin(bindCode("TagLib_ByteVector_containsAt__SWIG_0", "D_TagLib_ByteVector_containsAt__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_containsAt__SWIG_1", "D_TagLib_ByteVector_containsAt__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_containsAt__SWIG_2", "D_TagLib_ByteVector_containsAt__SWIG_2"));
  mixin(bindCode("TagLib_ByteVector_startsWith", "D_TagLib_ByteVector_startsWith"));
  mixin(bindCode("TagLib_ByteVector_endsWith", "D_TagLib_ByteVector_endsWith"));
  mixin(bindCode("TagLib_ByteVector_replace", "D_TagLib_ByteVector_replace"));
  mixin(bindCode("TagLib_ByteVector_endsWithPartialMatch", "D_TagLib_ByteVector_endsWithPartialMatch"));
  mixin(bindCode("TagLib_ByteVector_append", "D_TagLib_ByteVector_append"));
  mixin(bindCode("TagLib_ByteVector_clear", "D_TagLib_ByteVector_clear"));
  mixin(bindCode("TagLib_ByteVector_size", "D_TagLib_ByteVector_size"));
  mixin(bindCode("TagLib_ByteVector_resize__SWIG_0", "D_TagLib_ByteVector_resize__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_resize__SWIG_1", "D_TagLib_ByteVector_resize__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_begin__SWIG_0", "D_TagLib_ByteVector_begin__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_end__SWIG_0", "D_TagLib_ByteVector_end__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_isNull", "D_TagLib_ByteVector_isNull"));
  mixin(bindCode("TagLib_ByteVector_isEmpty", "D_TagLib_ByteVector_isEmpty"));
  mixin(bindCode("TagLib_ByteVector_checksum", "D_TagLib_ByteVector_checksum"));
  mixin(bindCode("TagLib_ByteVector_toUInt__SWIG_0", "D_TagLib_ByteVector_toUInt__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_toUInt__SWIG_1", "D_TagLib_ByteVector_toUInt__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_toShort__SWIG_0", "D_TagLib_ByteVector_toShort__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_toShort__SWIG_1", "D_TagLib_ByteVector_toShort__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_toLongLong__SWIG_0", "D_TagLib_ByteVector_toLongLong__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_toLongLong__SWIG_1", "D_TagLib_ByteVector_toLongLong__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_fromUInt__SWIG_0", "D_TagLib_ByteVector_fromUInt__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_fromUInt__SWIG_1", "D_TagLib_ByteVector_fromUInt__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_fromShort__SWIG_0", "D_TagLib_ByteVector_fromShort__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_fromShort__SWIG_1", "D_TagLib_ByteVector_fromShort__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_fromLongLong__SWIG_0", "D_TagLib_ByteVector_fromLongLong__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_fromLongLong__SWIG_1", "D_TagLib_ByteVector_fromLongLong__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_fromCString__SWIG_0", "D_TagLib_ByteVector_fromCString__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_fromCString__SWIG_1", "D_TagLib_ByteVector_fromCString__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_opIndex__SWIG_0", "D_TagLib_ByteVector_opIndex__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_swigOpEquals__SWIG_0", "D_TagLib_ByteVector_swigOpEquals__SWIG_0"));
  mixin(bindCode("TagLib_ByteVector_swigOpEquals__SWIG_1", "D_TagLib_ByteVector_swigOpEquals__SWIG_1"));
  mixin(bindCode("TagLib_ByteVector_swigOpLt", "D_TagLib_ByteVector_swigOpLt"));
  mixin(bindCode("TagLib_ByteVector_swigOpGt", "D_TagLib_ByteVector_swigOpGt"));
  mixin(bindCode("TagLib_ByteVector_swigOpAdd", "D_TagLib_ByteVector_swigOpAdd"));
  mixin(bindCode("TagLib_ByteVector__null_set", "D_TagLib_ByteVector__null_set"));
  mixin(bindCode("TagLib_ByteVector__null_get", "D_TagLib_ByteVector__null_get"));
  mixin(bindCode("new_bvList__SWIG_0", "D_new_bvList__SWIG_0"));
  mixin(bindCode("new_bvList__SWIG_1", "D_new_bvList__SWIG_1"));
  mixin(bindCode("delete_bvList", "D_delete_bvList"));
  mixin(bindCode("bvList_begin__SWIG_0", "D_bvList_begin__SWIG_0"));
  mixin(bindCode("bvList_end__SWIG_0", "D_bvList_end__SWIG_0"));
  mixin(bindCode("bvList_insert", "D_bvList_insert"));
  mixin(bindCode("bvList_sortedInsert__SWIG_0", "D_bvList_sortedInsert__SWIG_0"));
  mixin(bindCode("bvList_sortedInsert__SWIG_1", "D_bvList_sortedInsert__SWIG_1"));
  mixin(bindCode("bvList_append__SWIG_0", "D_bvList_append__SWIG_0"));
  mixin(bindCode("bvList_append__SWIG_1", "D_bvList_append__SWIG_1"));
  mixin(bindCode("bvList_prepend__SWIG_0", "D_bvList_prepend__SWIG_0"));
  mixin(bindCode("bvList_prepend__SWIG_1", "D_bvList_prepend__SWIG_1"));
  mixin(bindCode("bvList_clear", "D_bvList_clear"));
  mixin(bindCode("bvList_size", "D_bvList_size"));
  mixin(bindCode("bvList_isEmpty", "D_bvList_isEmpty"));
  mixin(bindCode("bvList_find__SWIG_0", "D_bvList_find__SWIG_0"));
  mixin(bindCode("bvList_contains", "D_bvList_contains"));
  mixin(bindCode("bvList_erase", "D_bvList_erase"));
  mixin(bindCode("bvList_front__SWIG_0", "D_bvList_front__SWIG_0"));
  mixin(bindCode("bvList_back__SWIG_0", "D_bvList_back__SWIG_0"));
  mixin(bindCode("bvList_setAutoDelete", "D_bvList_setAutoDelete"));
  mixin(bindCode("bvList_opIndex", "D_bvList_opIndex"));
  mixin(bindCode("bvList_swigOpEquals", "D_bvList_swigOpEquals"));
  mixin(bindCode("new_TagLib_ByteVectorList__SWIG_0", "D_new_TagLib_ByteVectorList__SWIG_0"));
  mixin(bindCode("delete_TagLib_ByteVectorList", "D_delete_TagLib_ByteVectorList"));
  mixin(bindCode("new_TagLib_ByteVectorList__SWIG_1", "D_new_TagLib_ByteVectorList__SWIG_1"));
  mixin(bindCode("TagLib_ByteVectorList_toByteVector__SWIG_0", "D_TagLib_ByteVectorList_toByteVector__SWIG_0"));
  mixin(bindCode("TagLib_ByteVectorList_toByteVector__SWIG_1", "D_TagLib_ByteVectorList_toByteVector__SWIG_1"));
  mixin(bindCode("TagLib_ByteVectorList_split__SWIG_0", "D_TagLib_ByteVectorList_split__SWIG_0"));
  mixin(bindCode("TagLib_ByteVectorList_split__SWIG_1", "D_TagLib_ByteVectorList_split__SWIG_1"));
  mixin(bindCode("TagLib_ByteVectorList_split__SWIG_2", "D_TagLib_ByteVectorList_split__SWIG_2"));
  mixin(bindCode("TagLib_ByteVectorList_Upcast", "D_TagLib_ByteVectorList_Upcast"));
  mixin(bindCode("new_strList__SWIG_0", "D_new_strList__SWIG_0"));
  mixin(bindCode("new_strList__SWIG_1", "D_new_strList__SWIG_1"));
  mixin(bindCode("delete_strList", "D_delete_strList"));
  mixin(bindCode("strList_begin__SWIG_0", "D_strList_begin__SWIG_0"));
  mixin(bindCode("strList_end__SWIG_0", "D_strList_end__SWIG_0"));
  mixin(bindCode("strList_insert", "D_strList_insert"));
  mixin(bindCode("strList_sortedInsert__SWIG_0", "D_strList_sortedInsert__SWIG_0"));
  mixin(bindCode("strList_sortedInsert__SWIG_1", "D_strList_sortedInsert__SWIG_1"));
  mixin(bindCode("strList_append__SWIG_0", "D_strList_append__SWIG_0"));
  mixin(bindCode("strList_append__SWIG_1", "D_strList_append__SWIG_1"));
  mixin(bindCode("strList_prepend__SWIG_0", "D_strList_prepend__SWIG_0"));
  mixin(bindCode("strList_prepend__SWIG_1", "D_strList_prepend__SWIG_1"));
  mixin(bindCode("strList_clear", "D_strList_clear"));
  mixin(bindCode("strList_size", "D_strList_size"));
  mixin(bindCode("strList_isEmpty", "D_strList_isEmpty"));
  mixin(bindCode("strList_find__SWIG_0", "D_strList_find__SWIG_0"));
  mixin(bindCode("strList_contains", "D_strList_contains"));
  mixin(bindCode("strList_erase", "D_strList_erase"));
  mixin(bindCode("strList_front__SWIG_0", "D_strList_front__SWIG_0"));
  mixin(bindCode("strList_back__SWIG_0", "D_strList_back__SWIG_0"));
  mixin(bindCode("strList_setAutoDelete", "D_strList_setAutoDelete"));
  mixin(bindCode("strList_opIndex", "D_strList_opIndex"));
  mixin(bindCode("strList_swigOpEquals", "D_strList_swigOpEquals"));
  mixin(bindCode("new_TagLib_StringList__SWIG_0", "D_new_TagLib_StringList__SWIG_0"));
  mixin(bindCode("new_TagLib_StringList__SWIG_1", "D_new_TagLib_StringList__SWIG_1"));
  mixin(bindCode("new_TagLib_StringList__SWIG_2", "D_new_TagLib_StringList__SWIG_2"));
  mixin(bindCode("new_TagLib_StringList__SWIG_3", "D_new_TagLib_StringList__SWIG_3"));
  mixin(bindCode("delete_TagLib_StringList", "D_delete_TagLib_StringList"));
  mixin(bindCode("TagLib_StringList_toWString__SWIG_0", "D_TagLib_StringList_toWString__SWIG_0"));
  mixin(bindCode("TagLib_StringList_toWString__SWIG_1", "D_TagLib_StringList_toWString__SWIG_1"));
  mixin(bindCode("TagLib_StringList_append__SWIG_0", "D_TagLib_StringList_append__SWIG_0"));
  mixin(bindCode("TagLib_StringList_append__SWIG_1", "D_TagLib_StringList_append__SWIG_1"));
  mixin(bindCode("TagLib_StringList_split", "D_TagLib_StringList_split"));
  mixin(bindCode("TagLib_StringList_Upcast", "D_TagLib_StringList_Upcast"));
  mixin(bindCode("delete_TagLib_AudioProperties", "D_delete_TagLib_AudioProperties"));
  mixin(bindCode("TagLib_AudioProperties_length", "D_TagLib_AudioProperties_length"));
  mixin(bindCode("TagLib_AudioProperties_bitrate", "D_TagLib_AudioProperties_bitrate"));
  mixin(bindCode("TagLib_AudioProperties_sampleRate", "D_TagLib_AudioProperties_sampleRate"));
  mixin(bindCode("TagLib_AudioProperties_channels", "D_TagLib_AudioProperties_channels"));
  mixin(bindCode("delete_TagLib_Tag", "D_delete_TagLib_Tag"));
  mixin(bindCode("TagLib_Tag_title__SWIG_0", "D_TagLib_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_Tag_artist__SWIG_0", "D_TagLib_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_Tag_album__SWIG_0", "D_TagLib_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_Tag_comment__SWIG_0", "D_TagLib_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_Tag_genre__SWIG_0", "D_TagLib_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_Tag_year__SWIG_0", "D_TagLib_Tag_year__SWIG_0"));
  mixin(bindCode("TagLib_Tag_track__SWIG_0", "D_TagLib_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_Tag_title__SWIG_1", "D_TagLib_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_Tag_artist__SWIG_1", "D_TagLib_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_Tag_album__SWIG_1", "D_TagLib_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_Tag_comment__SWIG_1", "D_TagLib_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_Tag_genre__SWIG_1", "D_TagLib_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_Tag_year__SWIG_1", "D_TagLib_Tag_year__SWIG_1"));
  mixin(bindCode("TagLib_Tag_track__SWIG_1", "D_TagLib_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_Tag_isEmpty", "D_TagLib_Tag_isEmpty"));
  mixin(bindCode("TagLib_Tag_duplicate__SWIG_0", "D_TagLib_Tag_duplicate__SWIG_0"));
  mixin(bindCode("TagLib_Tag_duplicate__SWIG_1", "D_TagLib_Tag_duplicate__SWIG_1"));
  mixin(bindCode("delete_TagLib_File", "D_delete_TagLib_File"));
  mixin(bindCode("TagLib_File_name", "D_TagLib_File_name"));
  mixin(bindCode("TagLib_File_tag", "D_TagLib_File_tag"));
  mixin(bindCode("TagLib_File_audioProperties", "D_TagLib_File_audioProperties"));
  mixin(bindCode("TagLib_File_save", "D_TagLib_File_save"));
  mixin(bindCode("TagLib_File_readBlock", "D_TagLib_File_readBlock"));
  mixin(bindCode("TagLib_File_writeBlock", "D_TagLib_File_writeBlock"));
  mixin(bindCode("TagLib_File_find__SWIG_0", "D_TagLib_File_find__SWIG_0"));
  mixin(bindCode("TagLib_File_find__SWIG_1", "D_TagLib_File_find__SWIG_1"));
  mixin(bindCode("TagLib_File_find__SWIG_2", "D_TagLib_File_find__SWIG_2"));
  mixin(bindCode("TagLib_File_rfind__SWIG_0", "D_TagLib_File_rfind__SWIG_0"));
  mixin(bindCode("TagLib_File_rfind__SWIG_1", "D_TagLib_File_rfind__SWIG_1"));
  mixin(bindCode("TagLib_File_rfind__SWIG_2", "D_TagLib_File_rfind__SWIG_2"));
  mixin(bindCode("TagLib_File_insert__SWIG_0", "D_TagLib_File_insert__SWIG_0"));
  mixin(bindCode("TagLib_File_insert__SWIG_1", "D_TagLib_File_insert__SWIG_1"));
  mixin(bindCode("TagLib_File_insert__SWIG_2", "D_TagLib_File_insert__SWIG_2"));
  mixin(bindCode("TagLib_File_removeBlock__SWIG_0", "D_TagLib_File_removeBlock__SWIG_0"));
  mixin(bindCode("TagLib_File_removeBlock__SWIG_1", "D_TagLib_File_removeBlock__SWIG_1"));
  mixin(bindCode("TagLib_File_removeBlock__SWIG_2", "D_TagLib_File_removeBlock__SWIG_2"));
  mixin(bindCode("TagLib_File_readOnly", "D_TagLib_File_readOnly"));
  mixin(bindCode("TagLib_File_isOpen", "D_TagLib_File_isOpen"));
  mixin(bindCode("TagLib_File_isValid", "D_TagLib_File_isValid"));
  mixin(bindCode("TagLib_File_seek__SWIG_0", "D_TagLib_File_seek__SWIG_0"));
  mixin(bindCode("TagLib_File_seek__SWIG_1", "D_TagLib_File_seek__SWIG_1"));
  mixin(bindCode("TagLib_File_clear", "D_TagLib_File_clear"));
  mixin(bindCode("TagLib_File_tell", "D_TagLib_File_tell"));
  mixin(bindCode("TagLib_File_length", "D_TagLib_File_length"));
  mixin(bindCode("TagLib_File_isReadable", "D_TagLib_File_isReadable"));
  mixin(bindCode("TagLib_File_isWritable", "D_TagLib_File_isWritable"));
  mixin(bindCode("FileTypeResolver_createFile__SWIG_0", "D_FileTypeResolver_createFile__SWIG_0"));
  mixin(bindCode("FileTypeResolver_createFile__SWIG_1", "D_FileTypeResolver_createFile__SWIG_1"));
  mixin(bindCode("FileTypeResolver_createFile__SWIG_2", "D_FileTypeResolver_createFile__SWIG_2"));
  mixin(bindCode("new_FileTypeResolver", "D_new_FileTypeResolver"));
  mixin(bindCode("delete_FileTypeResolver", "D_delete_FileTypeResolver"));
  mixin(bindCode("FileTypeResolver_director_connect", "D_FileTypeResolver_director_connect"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_0", "D_new_TagLib_CPP_FileRef__SWIG_0"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_1", "D_new_TagLib_CPP_FileRef__SWIG_1"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_2", "D_new_TagLib_CPP_FileRef__SWIG_2"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_3", "D_new_TagLib_CPP_FileRef__SWIG_3"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_4", "D_new_TagLib_CPP_FileRef__SWIG_4"));
  mixin(bindCode("new_TagLib_CPP_FileRef__SWIG_5", "D_new_TagLib_CPP_FileRef__SWIG_5"));
  mixin(bindCode("delete_TagLib_CPP_FileRef", "D_delete_TagLib_CPP_FileRef"));
  mixin(bindCode("TagLib_CPP_FileRef_tag", "D_TagLib_CPP_FileRef_tag"));
  mixin(bindCode("TagLib_CPP_FileRef_audioProperties", "D_TagLib_CPP_FileRef_audioProperties"));
  mixin(bindCode("TagLib_CPP_FileRef_file", "D_TagLib_CPP_FileRef_file"));
  mixin(bindCode("TagLib_CPP_FileRef_save", "D_TagLib_CPP_FileRef_save"));
  mixin(bindCode("TagLib_CPP_FileRef_addFileTypeResolver", "D_TagLib_CPP_FileRef_addFileTypeResolver"));
  mixin(bindCode("TagLib_CPP_FileRef_defaultFileExtensions", "D_TagLib_CPP_FileRef_defaultFileExtensions"));
  mixin(bindCode("TagLib_CPP_FileRef_isNull", "D_TagLib_CPP_FileRef_isNull"));
  mixin(bindCode("TagLib_CPP_FileRef_swigOpEquals", "D_TagLib_CPP_FileRef_swigOpEquals"));
  mixin(bindCode("TagLib_CPP_FileRef_create__SWIG_0", "D_TagLib_CPP_FileRef_create__SWIG_0"));
  mixin(bindCode("TagLib_CPP_FileRef_create__SWIG_1", "D_TagLib_CPP_FileRef_create__SWIG_1"));
  mixin(bindCode("TagLib_CPP_FileRef_create__SWIG_2", "D_TagLib_CPP_FileRef_create__SWIG_2"));
  mixin(bindCode("new_TagLib_APE_Footer__SWIG_0", "D_new_TagLib_APE_Footer__SWIG_0"));
  mixin(bindCode("new_TagLib_APE_Footer__SWIG_1", "D_new_TagLib_APE_Footer__SWIG_1"));
  mixin(bindCode("delete_TagLib_APE_Footer", "D_delete_TagLib_APE_Footer"));
  mixin(bindCode("TagLib_APE_Footer__version", "D_TagLib_APE_Footer__version"));
  mixin(bindCode("TagLib_APE_Footer_headerPresent", "D_TagLib_APE_Footer_headerPresent"));
  mixin(bindCode("TagLib_APE_Footer_footerPresent", "D_TagLib_APE_Footer_footerPresent"));
  mixin(bindCode("TagLib_APE_Footer_isHeader", "D_TagLib_APE_Footer_isHeader"));
  mixin(bindCode("TagLib_APE_Footer_setHeaderPresent", "D_TagLib_APE_Footer_setHeaderPresent"));
  mixin(bindCode("TagLib_APE_Footer_itemCount", "D_TagLib_APE_Footer_itemCount"));
  mixin(bindCode("TagLib_APE_Footer_setItemCount", "D_TagLib_APE_Footer_setItemCount"));
  mixin(bindCode("TagLib_APE_Footer_tagSize", "D_TagLib_APE_Footer_tagSize"));
  mixin(bindCode("TagLib_APE_Footer_completeTagSize", "D_TagLib_APE_Footer_completeTagSize"));
  mixin(bindCode("TagLib_APE_Footer_setTagSize", "D_TagLib_APE_Footer_setTagSize"));
  mixin(bindCode("TagLib_APE_Footer_size", "D_TagLib_APE_Footer_size"));
  mixin(bindCode("TagLib_APE_Footer_fileIdentifier", "D_TagLib_APE_Footer_fileIdentifier"));
  mixin(bindCode("TagLib_APE_Footer_setData", "D_TagLib_APE_Footer_setData"));
  mixin(bindCode("TagLib_APE_Footer_renderFooter", "D_TagLib_APE_Footer_renderFooter"));
  mixin(bindCode("TagLib_APE_Footer_renderHeader", "D_TagLib_APE_Footer_renderHeader"));
  mixin(bindCode("new_TagLib_APE_Item__SWIG_0", "D_new_TagLib_APE_Item__SWIG_0"));
  mixin(bindCode("new_TagLib_APE_Item__SWIG_1", "D_new_TagLib_APE_Item__SWIG_1"));
  mixin(bindCode("new_TagLib_APE_Item__SWIG_2", "D_new_TagLib_APE_Item__SWIG_2"));
  mixin(bindCode("new_TagLib_APE_Item__SWIG_3", "D_new_TagLib_APE_Item__SWIG_3"));
  mixin(bindCode("delete_TagLib_APE_Item", "D_delete_TagLib_APE_Item"));
  mixin(bindCode("TagLib_APE_Item_key", "D_TagLib_APE_Item_key"));
  mixin(bindCode("TagLib_APE_Item_value", "D_TagLib_APE_Item_value"));
  mixin(bindCode("TagLib_APE_Item_setKey", "D_TagLib_APE_Item_setKey"));
  mixin(bindCode("TagLib_APE_Item_setValue", "D_TagLib_APE_Item_setValue"));
  mixin(bindCode("TagLib_APE_Item_setValues", "D_TagLib_APE_Item_setValues"));
  mixin(bindCode("TagLib_APE_Item_appendValue", "D_TagLib_APE_Item_appendValue"));
  mixin(bindCode("TagLib_APE_Item_appendValues", "D_TagLib_APE_Item_appendValues"));
  mixin(bindCode("TagLib_APE_Item_size", "D_TagLib_APE_Item_size"));
  mixin(bindCode("TagLib_APE_Item_toString", "D_TagLib_APE_Item_toString"));
  mixin(bindCode("TagLib_APE_Item_toStringList", "D_TagLib_APE_Item_toStringList"));
  mixin(bindCode("TagLib_APE_Item_values", "D_TagLib_APE_Item_values"));
  mixin(bindCode("TagLib_APE_Item_render", "D_TagLib_APE_Item_render"));
  mixin(bindCode("TagLib_APE_Item_parse", "D_TagLib_APE_Item_parse"));
  mixin(bindCode("TagLib_APE_Item_setReadOnly", "D_TagLib_APE_Item_setReadOnly"));
  mixin(bindCode("TagLib_APE_Item_isReadOnly", "D_TagLib_APE_Item_isReadOnly"));
  mixin(bindCode("TagLib_APE_Item_setType", "D_TagLib_APE_Item_setType"));
  mixin(bindCode("TagLib_APE_Item_type", "D_TagLib_APE_Item_type"));
  mixin(bindCode("TagLib_APE_Item_isEmpty", "D_TagLib_APE_Item_isEmpty"));
  mixin(bindCode("new_TagLib_APE_Tag__SWIG_0", "D_new_TagLib_APE_Tag__SWIG_0"));
  mixin(bindCode("new_TagLib_APE_Tag__SWIG_1", "D_new_TagLib_APE_Tag__SWIG_1"));
  mixin(bindCode("delete_TagLib_APE_Tag", "D_delete_TagLib_APE_Tag"));
  mixin(bindCode("TagLib_APE_Tag_render", "D_TagLib_APE_Tag_render"));
  mixin(bindCode("TagLib_APE_Tag_fileIdentifier", "D_TagLib_APE_Tag_fileIdentifier"));
  mixin(bindCode("TagLib_APE_Tag_title__SWIG_0", "D_TagLib_APE_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_artist__SWIG_0", "D_TagLib_APE_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_album__SWIG_0", "D_TagLib_APE_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_comment__SWIG_0", "D_TagLib_APE_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_genre__SWIG_0", "D_TagLib_APE_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_year__SWIG_0", "D_TagLib_APE_Tag_year__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_track__SWIG_0", "D_TagLib_APE_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_title__SWIG_1", "D_TagLib_APE_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_artist__SWIG_1", "D_TagLib_APE_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_album__SWIG_1", "D_TagLib_APE_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_comment__SWIG_1", "D_TagLib_APE_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_genre__SWIG_1", "D_TagLib_APE_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_year__SWIG_1", "D_TagLib_APE_Tag_year__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_track__SWIG_1", "D_TagLib_APE_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_footer", "D_TagLib_APE_Tag_footer"));
  mixin(bindCode("TagLib_APE_Tag_removeItem", "D_TagLib_APE_Tag_removeItem"));
  mixin(bindCode("TagLib_APE_Tag_addValue__SWIG_0", "D_TagLib_APE_Tag_addValue__SWIG_0"));
  mixin(bindCode("TagLib_APE_Tag_addValue__SWIG_1", "D_TagLib_APE_Tag_addValue__SWIG_1"));
  mixin(bindCode("TagLib_APE_Tag_setItem", "D_TagLib_APE_Tag_setItem"));
  mixin(bindCode("TagLib_APE_Tag_Upcast", "D_TagLib_APE_Tag_Upcast"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_0", "D_new_TagLib_ASF_Attribute__SWIG_0"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_1", "D_new_TagLib_ASF_Attribute__SWIG_1"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_2", "D_new_TagLib_ASF_Attribute__SWIG_2"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_3", "D_new_TagLib_ASF_Attribute__SWIG_3"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_4", "D_new_TagLib_ASF_Attribute__SWIG_4"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_5", "D_new_TagLib_ASF_Attribute__SWIG_5"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_6", "D_new_TagLib_ASF_Attribute__SWIG_6"));
  mixin(bindCode("new_TagLib_ASF_Attribute__SWIG_7", "D_new_TagLib_ASF_Attribute__SWIG_7"));
  mixin(bindCode("delete_TagLib_ASF_Attribute", "D_delete_TagLib_ASF_Attribute"));
  mixin(bindCode("TagLib_ASF_Attribute_type", "D_TagLib_ASF_Attribute_type"));
  mixin(bindCode("TagLib_ASF_Attribute_toBool", "D_TagLib_ASF_Attribute_toBool"));
  mixin(bindCode("TagLib_ASF_Attribute_toUShort", "D_TagLib_ASF_Attribute_toUShort"));
  mixin(bindCode("TagLib_ASF_Attribute_toUInt", "D_TagLib_ASF_Attribute_toUInt"));
  mixin(bindCode("TagLib_ASF_Attribute_toULongLong", "D_TagLib_ASF_Attribute_toULongLong"));
  mixin(bindCode("TagLib_ASF_Attribute_toString", "D_TagLib_ASF_Attribute_toString"));
  mixin(bindCode("TagLib_ASF_Attribute_toByteVector", "D_TagLib_ASF_Attribute_toByteVector"));
  mixin(bindCode("TagLib_ASF_Attribute_language", "D_TagLib_ASF_Attribute_language"));
  mixin(bindCode("TagLib_ASF_Attribute_setLanguage", "D_TagLib_ASF_Attribute_setLanguage"));
  mixin(bindCode("TagLib_ASF_Attribute_stream", "D_TagLib_ASF_Attribute_stream"));
  mixin(bindCode("TagLib_ASF_Attribute_setStream", "D_TagLib_ASF_Attribute_setStream"));
  mixin(bindCode("TagLib_ASF_Attribute_dataSize", "D_TagLib_ASF_Attribute_dataSize"));
  mixin(bindCode("new_TagLib_ASF_Properties", "D_new_TagLib_ASF_Properties"));
  mixin(bindCode("delete_TagLib_ASF_Properties", "D_delete_TagLib_ASF_Properties"));
  mixin(bindCode("TagLib_ASF_Properties_length", "D_TagLib_ASF_Properties_length"));
  mixin(bindCode("TagLib_ASF_Properties_bitrate", "D_TagLib_ASF_Properties_bitrate"));
  mixin(bindCode("TagLib_ASF_Properties_sampleRate", "D_TagLib_ASF_Properties_sampleRate"));
  mixin(bindCode("TagLib_ASF_Properties_channels", "D_TagLib_ASF_Properties_channels"));
  mixin(bindCode("TagLib_ASF_Properties_setLength", "D_TagLib_ASF_Properties_setLength"));
  mixin(bindCode("TagLib_ASF_Properties_setBitrate", "D_TagLib_ASF_Properties_setBitrate"));
  mixin(bindCode("TagLib_ASF_Properties_setSampleRate", "D_TagLib_ASF_Properties_setSampleRate"));
  mixin(bindCode("TagLib_ASF_Properties_setChannels", "D_TagLib_ASF_Properties_setChannels"));
  mixin(bindCode("TagLib_ASF_Properties_Upcast", "D_TagLib_ASF_Properties_Upcast"));
  mixin(bindCode("new_TagLib_ASF_File__SWIG_0", "D_new_TagLib_ASF_File__SWIG_0"));
  mixin(bindCode("new_TagLib_ASF_File__SWIG_1", "D_new_TagLib_ASF_File__SWIG_1"));
  mixin(bindCode("new_TagLib_ASF_File__SWIG_2", "D_new_TagLib_ASF_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_ASF_File", "D_delete_TagLib_ASF_File"));
  mixin(bindCode("TagLib_ASF_File_tag", "D_TagLib_ASF_File_tag"));
  mixin(bindCode("TagLib_ASF_File_audioProperties", "D_TagLib_ASF_File_audioProperties"));
  mixin(bindCode("TagLib_ASF_File_save", "D_TagLib_ASF_File_save"));
  mixin(bindCode("TagLib_ASF_File_Upcast", "D_TagLib_ASF_File_Upcast"));
  mixin(bindCode("new_TagLib_ASF_Tag", "D_new_TagLib_ASF_Tag"));
  mixin(bindCode("delete_TagLib_ASF_Tag", "D_delete_TagLib_ASF_Tag"));
  mixin(bindCode("TagLib_ASF_Tag_title__SWIG_0", "D_TagLib_ASF_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_artist__SWIG_0", "D_TagLib_ASF_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_album__SWIG_0", "D_TagLib_ASF_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_comment__SWIG_0", "D_TagLib_ASF_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_genre__SWIG_0", "D_TagLib_ASF_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_rating", "D_TagLib_ASF_Tag_rating"));
  mixin(bindCode("TagLib_ASF_Tag_copyright", "D_TagLib_ASF_Tag_copyright"));
  mixin(bindCode("TagLib_ASF_Tag_year__SWIG_0", "D_TagLib_ASF_Tag_year__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_track__SWIG_0", "D_TagLib_ASF_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_ASF_Tag_title__SWIG_1", "D_TagLib_ASF_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_artist__SWIG_1", "D_TagLib_ASF_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_album__SWIG_1", "D_TagLib_ASF_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_comment__SWIG_1", "D_TagLib_ASF_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_setRating", "D_TagLib_ASF_Tag_setRating"));
  mixin(bindCode("TagLib_ASF_Tag_setCopyright", "D_TagLib_ASF_Tag_setCopyright"));
  mixin(bindCode("TagLib_ASF_Tag_genre__SWIG_1", "D_TagLib_ASF_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_year__SWIG_1", "D_TagLib_ASF_Tag_year__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_track__SWIG_1", "D_TagLib_ASF_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_ASF_Tag_isEmpty", "D_TagLib_ASF_Tag_isEmpty"));
  mixin(bindCode("TagLib_ASF_Tag_attributeListMap", "D_TagLib_ASF_Tag_attributeListMap"));
  mixin(bindCode("TagLib_ASF_Tag_removeItem", "D_TagLib_ASF_Tag_removeItem"));
  mixin(bindCode("TagLib_ASF_Tag_setAttribute", "D_TagLib_ASF_Tag_setAttribute"));
  mixin(bindCode("TagLib_ASF_Tag_addAttribute", "D_TagLib_ASF_Tag_addAttribute"));
  mixin(bindCode("TagLib_ASF_Tag_Upcast", "D_TagLib_ASF_Tag_Upcast"));
  mixin(bindCode("new_TagLib_FLAC_Properties__SWIG_0", "D_new_TagLib_FLAC_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_FLAC_Properties__SWIG_1", "D_new_TagLib_FLAC_Properties__SWIG_1"));
  mixin(bindCode("new_TagLib_FLAC_Properties__SWIG_2", "D_new_TagLib_FLAC_Properties__SWIG_2"));
  mixin(bindCode("new_TagLib_FLAC_Properties__SWIG_3", "D_new_TagLib_FLAC_Properties__SWIG_3"));
  mixin(bindCode("delete_TagLib_FLAC_Properties", "D_delete_TagLib_FLAC_Properties"));
  mixin(bindCode("TagLib_FLAC_Properties_length", "D_TagLib_FLAC_Properties_length"));
  mixin(bindCode("TagLib_FLAC_Properties_bitrate", "D_TagLib_FLAC_Properties_bitrate"));
  mixin(bindCode("TagLib_FLAC_Properties_sampleRate", "D_TagLib_FLAC_Properties_sampleRate"));
  mixin(bindCode("TagLib_FLAC_Properties_channels", "D_TagLib_FLAC_Properties_channels"));
  mixin(bindCode("TagLib_FLAC_Properties_sampleWidth", "D_TagLib_FLAC_Properties_sampleWidth"));
  mixin(bindCode("TagLib_FLAC_Properties_Upcast", "D_TagLib_FLAC_Properties_Upcast"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_0", "D_new_TagLib_FLAC_File__SWIG_0"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_1", "D_new_TagLib_FLAC_File__SWIG_1"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_2", "D_new_TagLib_FLAC_File__SWIG_2"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_3", "D_new_TagLib_FLAC_File__SWIG_3"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_4", "D_new_TagLib_FLAC_File__SWIG_4"));
  mixin(bindCode("new_TagLib_FLAC_File__SWIG_5", "D_new_TagLib_FLAC_File__SWIG_5"));
  mixin(bindCode("delete_TagLib_FLAC_File", "D_delete_TagLib_FLAC_File"));
  mixin(bindCode("TagLib_FLAC_File_tag", "D_TagLib_FLAC_File_tag"));
  mixin(bindCode("TagLib_FLAC_File_audioProperties", "D_TagLib_FLAC_File_audioProperties"));
  mixin(bindCode("TagLib_FLAC_File_save", "D_TagLib_FLAC_File_save"));
  mixin(bindCode("TagLib_FLAC_File_ID3v2Tag__SWIG_0", "D_TagLib_FLAC_File_ID3v2Tag__SWIG_0"));
  mixin(bindCode("TagLib_FLAC_File_ID3v2Tag__SWIG_1", "D_TagLib_FLAC_File_ID3v2Tag__SWIG_1"));
  mixin(bindCode("TagLib_FLAC_File_ID3v1Tag__SWIG_0", "D_TagLib_FLAC_File_ID3v1Tag__SWIG_0"));
  mixin(bindCode("TagLib_FLAC_File_ID3v1Tag__SWIG_1", "D_TagLib_FLAC_File_ID3v1Tag__SWIG_1"));
  mixin(bindCode("TagLib_FLAC_File_xiphComment__SWIG_0", "D_TagLib_FLAC_File_xiphComment__SWIG_0"));
  mixin(bindCode("TagLib_FLAC_File_xiphComment__SWIG_1", "D_TagLib_FLAC_File_xiphComment__SWIG_1"));
  mixin(bindCode("TagLib_FLAC_File_setID3v2FrameFactory", "D_TagLib_FLAC_File_setID3v2FrameFactory"));
  mixin(bindCode("TagLib_FLAC_File_streamInfoData", "D_TagLib_FLAC_File_streamInfoData"));
  mixin(bindCode("TagLib_FLAC_File_streamLength", "D_TagLib_FLAC_File_streamLength"));
  mixin(bindCode("TagLib_FLAC_File_Upcast", "D_TagLib_FLAC_File_Upcast"));
  mixin(bindCode("new_TagLib_genreMap__SWIG_0", "D_new_TagLib_genreMap__SWIG_0"));
  mixin(bindCode("new_TagLib_genreMap__SWIG_1", "D_new_TagLib_genreMap__SWIG_1"));
  mixin(bindCode("delete_TagLib_genreMap", "D_delete_TagLib_genreMap"));
  mixin(bindCode("TagLib_genreMap_begin__SWIG_0", "D_TagLib_genreMap_begin__SWIG_0"));
  mixin(bindCode("TagLib_genreMap_end__SWIG_0", "D_TagLib_genreMap_end__SWIG_0"));
  mixin(bindCode("TagLib_genreMap_insert", "D_TagLib_genreMap_insert"));
  mixin(bindCode("TagLib_genreMap_clear", "D_TagLib_genreMap_clear"));
  mixin(bindCode("TagLib_genreMap_size", "D_TagLib_genreMap_size"));
  mixin(bindCode("TagLib_genreMap_isEmpty", "D_TagLib_genreMap_isEmpty"));
  mixin(bindCode("TagLib_genreMap_find__SWIG_0", "D_TagLib_genreMap_find__SWIG_0"));
  mixin(bindCode("TagLib_genreMap_contains", "D_TagLib_genreMap_contains"));
  mixin(bindCode("TagLib_genreMap_erase__SWIG_0", "D_TagLib_genreMap_erase__SWIG_0"));
  mixin(bindCode("TagLib_genreMap_erase__SWIG_1", "D_TagLib_genreMap_erase__SWIG_1"));
  mixin(bindCode("TagLib_genreMap_opIndex__SWIG_0", "D_TagLib_genreMap_opIndex__SWIG_0"));
  mixin(bindCode("genreList", "D_genreList"));
  mixin(bindCode("genreMap", "D_genreMap"));
  mixin(bindCode("genre", "D_genre"));
  mixin(bindCode("genreIndex", "D_genreIndex"));
  mixin(bindCode("TagLib_ID3v1_StringHandler_parse", "D_TagLib_ID3v1_StringHandler_parse"));
  mixin(bindCode("TagLib_ID3v1_StringHandler_render", "D_TagLib_ID3v1_StringHandler_render"));
  mixin(bindCode("new_TagLib_ID3v1_StringHandler", "D_new_TagLib_ID3v1_StringHandler"));
  mixin(bindCode("delete_TagLib_ID3v1_StringHandler", "D_delete_TagLib_ID3v1_StringHandler"));
  mixin(bindCode("new_TagLib_ID3v1_Tag__SWIG_0", "D_new_TagLib_ID3v1_Tag__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v1_Tag__SWIG_1", "D_new_TagLib_ID3v1_Tag__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v1_Tag", "D_delete_TagLib_ID3v1_Tag"));
  mixin(bindCode("TagLib_ID3v1_Tag_render", "D_TagLib_ID3v1_Tag_render"));
  mixin(bindCode("TagLib_ID3v1_Tag_fileIdentifier", "D_TagLib_ID3v1_Tag_fileIdentifier"));
  mixin(bindCode("TagLib_ID3v1_Tag_title__SWIG_0", "D_TagLib_ID3v1_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_artist__SWIG_0", "D_TagLib_ID3v1_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_album__SWIG_0", "D_TagLib_ID3v1_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_comment__SWIG_0", "D_TagLib_ID3v1_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_genre__SWIG_0", "D_TagLib_ID3v1_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_year__SWIG_0", "D_TagLib_ID3v1_Tag_year__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_track__SWIG_0", "D_TagLib_ID3v1_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_ID3v1_Tag_title__SWIG_1", "D_TagLib_ID3v1_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_artist__SWIG_1", "D_TagLib_ID3v1_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_album__SWIG_1", "D_TagLib_ID3v1_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_comment__SWIG_1", "D_TagLib_ID3v1_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_genre__SWIG_1", "D_TagLib_ID3v1_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_year__SWIG_1", "D_TagLib_ID3v1_Tag_year__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_track__SWIG_1", "D_TagLib_ID3v1_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_ID3v1_Tag_setStringHandler", "D_TagLib_ID3v1_Tag_setStringHandler"));
  mixin(bindCode("TagLib_ID3v1_Tag_Upcast", "D_TagLib_ID3v1_Tag_Upcast"));
  mixin(bindCode("delete_TagLib_ID3v2_Frame", "D_delete_TagLib_ID3v2_Frame"));
  mixin(bindCode("TagLib_ID3v2_Frame_frameID", "D_TagLib_ID3v2_Frame_frameID"));
  mixin(bindCode("TagLib_ID3v2_Frame_size", "D_TagLib_ID3v2_Frame_size"));
  mixin(bindCode("TagLib_ID3v2_Frame_headerSize__SWIG_0", "D_TagLib_ID3v2_Frame_headerSize__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Frame_headerSize__SWIG_1", "D_TagLib_ID3v2_Frame_headerSize__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Frame_setData", "D_TagLib_ID3v2_Frame_setData"));
  mixin(bindCode("TagLib_ID3v2_Frame_setText", "D_TagLib_ID3v2_Frame_setText"));
  mixin(bindCode("TagLib_ID3v2_Frame_toString", "D_TagLib_ID3v2_Frame_toString"));
  mixin(bindCode("TagLib_ID3v2_Frame_render", "D_TagLib_ID3v2_Frame_render"));
  mixin(bindCode("new_TagLib_ID3v2_Header__SWIG_0", "D_new_TagLib_ID3v2_Header__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_Header__SWIG_1", "D_new_TagLib_ID3v2_Header__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_Header", "D_delete_TagLib_ID3v2_Header"));
  mixin(bindCode("TagLib_ID3v2_Header_majorVersion", "D_TagLib_ID3v2_Header_majorVersion"));
  mixin(bindCode("TagLib_ID3v2_Header_setMajorVersion", "D_TagLib_ID3v2_Header_setMajorVersion"));
  mixin(bindCode("TagLib_ID3v2_Header_revisionNumber", "D_TagLib_ID3v2_Header_revisionNumber"));
  mixin(bindCode("TagLib_ID3v2_Header_unsynchronisation", "D_TagLib_ID3v2_Header_unsynchronisation"));
  mixin(bindCode("TagLib_ID3v2_Header_extendedHeader", "D_TagLib_ID3v2_Header_extendedHeader"));
  mixin(bindCode("TagLib_ID3v2_Header_experimentalIndicator", "D_TagLib_ID3v2_Header_experimentalIndicator"));
  mixin(bindCode("TagLib_ID3v2_Header_footerPresent", "D_TagLib_ID3v2_Header_footerPresent"));
  mixin(bindCode("TagLib_ID3v2_Header_tagSize", "D_TagLib_ID3v2_Header_tagSize"));
  mixin(bindCode("TagLib_ID3v2_Header_completeTagSize", "D_TagLib_ID3v2_Header_completeTagSize"));
  mixin(bindCode("TagLib_ID3v2_Header_setTagSize", "D_TagLib_ID3v2_Header_setTagSize"));
  mixin(bindCode("TagLib_ID3v2_Header_size", "D_TagLib_ID3v2_Header_size"));
  mixin(bindCode("TagLib_ID3v2_Header_fileIdentifier", "D_TagLib_ID3v2_Header_fileIdentifier"));
  mixin(bindCode("TagLib_ID3v2_Header_setData", "D_TagLib_ID3v2_Header_setData"));
  mixin(bindCode("TagLib_ID3v2_Header_render", "D_TagLib_ID3v2_Header_render"));
  mixin(bindCode("new_TagLib_ID3v2_ExtendedHeader", "D_new_TagLib_ID3v2_ExtendedHeader"));
  mixin(bindCode("delete_TagLib_ID3v2_ExtendedHeader", "D_delete_TagLib_ID3v2_ExtendedHeader"));
  mixin(bindCode("TagLib_ID3v2_ExtendedHeader_size", "D_TagLib_ID3v2_ExtendedHeader_size"));
  mixin(bindCode("TagLib_ID3v2_ExtendedHeader_setData", "D_TagLib_ID3v2_ExtendedHeader_setData"));
  mixin(bindCode("new_TagLib_ID3v2_Footer", "D_new_TagLib_ID3v2_Footer"));
  mixin(bindCode("delete_TagLib_ID3v2_Footer", "D_delete_TagLib_ID3v2_Footer"));
  mixin(bindCode("TagLib_ID3v2_Footer_size", "D_TagLib_ID3v2_Footer_size"));
  mixin(bindCode("TagLib_ID3v2_Footer_render", "D_TagLib_ID3v2_Footer_render"));
  mixin(bindCode("TagLib_ID3v2_FrameFactory_instance", "D_TagLib_ID3v2_FrameFactory_instance"));
  mixin(bindCode("TagLib_ID3v2_FrameFactory_createFrame__SWIG_0", "D_TagLib_ID3v2_FrameFactory_createFrame__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_FrameFactory_createFrame__SWIG_1", "D_TagLib_ID3v2_FrameFactory_createFrame__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_FrameFactory_createFrame__SWIG_2", "D_TagLib_ID3v2_FrameFactory_createFrame__SWIG_2"));
  mixin(bindCode("TagLib_ID3v2_FrameFactory_createFrame__SWIG_3", "D_TagLib_ID3v2_FrameFactory_createFrame__SWIG_3"));
  mixin(bindCode("new_frameList__SWIG_0", "D_new_frameList__SWIG_0"));
  mixin(bindCode("new_frameList__SWIG_1", "D_new_frameList__SWIG_1"));
  mixin(bindCode("delete_frameList", "D_delete_frameList"));
  mixin(bindCode("frameList_begin__SWIG_0", "D_frameList_begin__SWIG_0"));
  mixin(bindCode("frameList_end__SWIG_0", "D_frameList_end__SWIG_0"));
  mixin(bindCode("frameList_insert", "D_frameList_insert"));
  mixin(bindCode("frameList_sortedInsert__SWIG_0", "D_frameList_sortedInsert__SWIG_0"));
  mixin(bindCode("frameList_sortedInsert__SWIG_1", "D_frameList_sortedInsert__SWIG_1"));
  mixin(bindCode("frameList_append__SWIG_0", "D_frameList_append__SWIG_0"));
  mixin(bindCode("frameList_append__SWIG_1", "D_frameList_append__SWIG_1"));
  mixin(bindCode("frameList_prepend__SWIG_0", "D_frameList_prepend__SWIG_0"));
  mixin(bindCode("frameList_prepend__SWIG_1", "D_frameList_prepend__SWIG_1"));
  mixin(bindCode("frameList_clear", "D_frameList_clear"));
  mixin(bindCode("frameList_size", "D_frameList_size"));
  mixin(bindCode("frameList_isEmpty", "D_frameList_isEmpty"));
  mixin(bindCode("frameList_find__SWIG_0", "D_frameList_find__SWIG_0"));
  mixin(bindCode("frameList_contains", "D_frameList_contains"));
  mixin(bindCode("frameList_erase", "D_frameList_erase"));
  mixin(bindCode("frameList_front__SWIG_0", "D_frameList_front__SWIG_0"));
  mixin(bindCode("frameList_back__SWIG_0", "D_frameList_back__SWIG_0"));
  mixin(bindCode("frameList_setAutoDelete", "D_frameList_setAutoDelete"));
  mixin(bindCode("frameList_opIndex", "D_frameList_opIndex"));
  mixin(bindCode("frameList_swigOpEquals", "D_frameList_swigOpEquals"));
  mixin(bindCode("new_TagLib_ID3v2_Tag__SWIG_0", "D_new_TagLib_ID3v2_Tag__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_Tag__SWIG_1", "D_new_TagLib_ID3v2_Tag__SWIG_1"));
  mixin(bindCode("new_TagLib_ID3v2_Tag__SWIG_2", "D_new_TagLib_ID3v2_Tag__SWIG_2"));
  mixin(bindCode("delete_TagLib_ID3v2_Tag", "D_delete_TagLib_ID3v2_Tag"));
  mixin(bindCode("TagLib_ID3v2_Tag_title__SWIG_0", "D_TagLib_ID3v2_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_artist__SWIG_0", "D_TagLib_ID3v2_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_album__SWIG_0", "D_TagLib_ID3v2_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_comment__SWIG_0", "D_TagLib_ID3v2_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_genre__SWIG_0", "D_TagLib_ID3v2_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_year", "D_TagLib_ID3v2_Tag_year"));
  mixin(bindCode("TagLib_ID3v2_Tag_track__SWIG_0", "D_TagLib_ID3v2_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_title__SWIG_1", "D_TagLib_ID3v2_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_artist__SWIG_1", "D_TagLib_ID3v2_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_album__SWIG_1", "D_TagLib_ID3v2_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_comment__SWIG_1", "D_TagLib_ID3v2_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_genre__SWIG_1", "D_TagLib_ID3v2_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_Year", "D_TagLib_ID3v2_Tag_Year"));
  mixin(bindCode("TagLib_ID3v2_Tag_track__SWIG_1", "D_TagLib_ID3v2_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_isEmpty", "D_TagLib_ID3v2_Tag_isEmpty"));
  mixin(bindCode("TagLib_ID3v2_Tag_header", "D_TagLib_ID3v2_Tag_header"));
  mixin(bindCode("TagLib_ID3v2_Tag_extendedHeader", "D_TagLib_ID3v2_Tag_extendedHeader"));
  mixin(bindCode("TagLib_ID3v2_Tag_footer", "D_TagLib_ID3v2_Tag_footer"));
  mixin(bindCode("TagLib_ID3v2_Tag_frameListMap", "D_TagLib_ID3v2_Tag_frameListMap"));
  mixin(bindCode("TagLib_ID3v2_Tag_frameList__SWIG_0", "D_TagLib_ID3v2_Tag_frameList__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_frameList__SWIG_1", "D_TagLib_ID3v2_Tag_frameList__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_addFrame", "D_TagLib_ID3v2_Tag_addFrame"));
  mixin(bindCode("TagLib_ID3v2_Tag_removeFrame__SWIG_0", "D_TagLib_ID3v2_Tag_removeFrame__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_Tag_removeFrame__SWIG_1", "D_TagLib_ID3v2_Tag_removeFrame__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_Tag_removeFrames", "D_TagLib_ID3v2_Tag_removeFrames"));
  mixin(bindCode("TagLib_ID3v2_Tag_render", "D_TagLib_ID3v2_Tag_render"));
  mixin(bindCode("TagLib_ID3v2_Tag_Upcast", "D_TagLib_ID3v2_Tag_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_AttachedPictureFrame__SWIG_0", "D_new_TagLib_ID3v2_AttachedPictureFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_AttachedPictureFrame__SWIG_1", "D_new_TagLib_ID3v2_AttachedPictureFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_AttachedPictureFrame", "D_delete_TagLib_ID3v2_AttachedPictureFrame"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_toString", "D_TagLib_ID3v2_AttachedPictureFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_mimeType", "D_TagLib_ID3v2_AttachedPictureFrame_mimeType"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_setMimeType", "D_TagLib_ID3v2_AttachedPictureFrame_setMimeType"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_type", "D_TagLib_ID3v2_AttachedPictureFrame_type"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_setType", "D_TagLib_ID3v2_AttachedPictureFrame_setType"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_description", "D_TagLib_ID3v2_AttachedPictureFrame_description"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_setDescription", "D_TagLib_ID3v2_AttachedPictureFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_picture", "D_TagLib_ID3v2_AttachedPictureFrame_picture"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_setPicture", "D_TagLib_ID3v2_AttachedPictureFrame_setPicture"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrame_Upcast", "D_TagLib_ID3v2_AttachedPictureFrame_Upcast"));
  mixin(bindCode("delete_TagLib_ID3v2_AttachedPictureFrameV22", "D_delete_TagLib_ID3v2_AttachedPictureFrameV22"));
  mixin(bindCode("TagLib_ID3v2_AttachedPictureFrameV22_Upcast", "D_TagLib_ID3v2_AttachedPictureFrameV22_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_CommentsFrame", "D_new_TagLib_ID3v2_CommentsFrame"));
  mixin(bindCode("delete_TagLib_ID3v2_CommentsFrame", "D_delete_TagLib_ID3v2_CommentsFrame"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_toString", "D_TagLib_ID3v2_CommentsFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_language", "D_TagLib_ID3v2_CommentsFrame_language"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_description", "D_TagLib_ID3v2_CommentsFrame_description"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_text", "D_TagLib_ID3v2_CommentsFrame_text"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_setLanguage", "D_TagLib_ID3v2_CommentsFrame_setLanguage"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_setDescription", "D_TagLib_ID3v2_CommentsFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_setText", "D_TagLib_ID3v2_CommentsFrame_setText"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_findByDescription", "D_TagLib_ID3v2_CommentsFrame_findByDescription"));
  mixin(bindCode("TagLib_ID3v2_CommentsFrame_Upcast", "D_TagLib_ID3v2_CommentsFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_0", "D_new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_1", "D_new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_GeneralEncapsulatedObjectFrame", "D_delete_TagLib_ID3v2_GeneralEncapsulatedObjectFrame"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_toString", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_mimeType", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_mimeType"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setMimeType", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setMimeType"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_fileName", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_fileName"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setFileName", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setFileName"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_description", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_description"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setDescription", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_object", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_object"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setObject", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setObject"));
  mixin(bindCode("TagLib_ID3v2_GeneralEncapsulatedObjectFrame_Upcast", "D_TagLib_ID3v2_GeneralEncapsulatedObjectFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_PopularimeterFrame__SWIG_0", "D_new_TagLib_ID3v2_PopularimeterFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_PopularimeterFrame__SWIG_1", "D_new_TagLib_ID3v2_PopularimeterFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_PopularimeterFrame", "D_delete_TagLib_ID3v2_PopularimeterFrame"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_toString", "D_TagLib_ID3v2_PopularimeterFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_email", "D_TagLib_ID3v2_PopularimeterFrame_email"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_setEmail", "D_TagLib_ID3v2_PopularimeterFrame_setEmail"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_rating", "D_TagLib_ID3v2_PopularimeterFrame_rating"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_setRating", "D_TagLib_ID3v2_PopularimeterFrame_setRating"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_counter", "D_TagLib_ID3v2_PopularimeterFrame_counter"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_setCounter", "D_TagLib_ID3v2_PopularimeterFrame_setCounter"));
  mixin(bindCode("TagLib_ID3v2_PopularimeterFrame_Upcast", "D_TagLib_ID3v2_PopularimeterFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_PrivateFrame__SWIG_0", "D_new_TagLib_ID3v2_PrivateFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_PrivateFrame__SWIG_1", "D_new_TagLib_ID3v2_PrivateFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_PrivateFrame", "D_delete_TagLib_ID3v2_PrivateFrame"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_toString", "D_TagLib_ID3v2_PrivateFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_owner", "D_TagLib_ID3v2_PrivateFrame_owner"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_data", "D_TagLib_ID3v2_PrivateFrame_data"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_setOwner", "D_TagLib_ID3v2_PrivateFrame_setOwner"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_setData", "D_TagLib_ID3v2_PrivateFrame_setData"));
  mixin(bindCode("TagLib_ID3v2_PrivateFrame_Upcast", "D_TagLib_ID3v2_PrivateFrame_Upcast"));
  mixin(bindCode("new_PeakVolume", "D_new_PeakVolume"));
  mixin(bindCode("PeakVolume_bitsRepresentingPeak_set", "D_PeakVolume_bitsRepresentingPeak_set"));
  mixin(bindCode("PeakVolume_bitsRepresentingPeak_get", "D_PeakVolume_bitsRepresentingPeak_get"));
  mixin(bindCode("PeakVolume_peakVolume_set", "D_PeakVolume_peakVolume_set"));
  mixin(bindCode("PeakVolume_peakVolume_get", "D_PeakVolume_peakVolume_get"));
  mixin(bindCode("delete_PeakVolume", "D_delete_PeakVolume"));
  mixin(bindCode("new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_0", "D_new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_1", "D_new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_RelativeVolumeFrame", "D_delete_TagLib_ID3v2_RelativeVolumeFrame"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_toString", "D_TagLib_ID3v2_RelativeVolumeFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_channels", "D_TagLib_ID3v2_RelativeVolumeFrame_channels"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_channelType", "D_TagLib_ID3v2_RelativeVolumeFrame_channelType"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setChannelType", "D_TagLib_ID3v2_RelativeVolumeFrame_setChannelType"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_0", "D_TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_1", "D_TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_identification", "D_TagLib_ID3v2_RelativeVolumeFrame_identification"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_setIdentification", "D_TagLib_ID3v2_RelativeVolumeFrame_setIdentification"));
  mixin(bindCode("TagLib_ID3v2_RelativeVolumeFrame_Upcast", "D_TagLib_ID3v2_RelativeVolumeFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_TextIdentificationFrame", "D_new_TagLib_ID3v2_TextIdentificationFrame"));
  mixin(bindCode("delete_TagLib_ID3v2_TextIdentificationFrame", "D_delete_TagLib_ID3v2_TextIdentificationFrame"));
  mixin(bindCode("TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_0", "D_TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_1", "D_TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_TextIdentificationFrame_toString", "D_TagLib_ID3v2_TextIdentificationFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_TextIdentificationFrame_fieldList", "D_TagLib_ID3v2_TextIdentificationFrame_fieldList"));
  mixin(bindCode("TagLib_ID3v2_TextIdentificationFrame_Upcast", "D_TagLib_ID3v2_TextIdentificationFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_UserTextIdentificationFrame", "D_new_TagLib_ID3v2_UserTextIdentificationFrame"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_toString", "D_TagLib_ID3v2_UserTextIdentificationFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_description", "D_TagLib_ID3v2_UserTextIdentificationFrame_description"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_setDescription", "D_TagLib_ID3v2_UserTextIdentificationFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_fieldList", "D_TagLib_ID3v2_UserTextIdentificationFrame_fieldList"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_0", "D_TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_0"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_1", "D_TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_1"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_find", "D_TagLib_ID3v2_UserTextIdentificationFrame_find"));
  mixin(bindCode("delete_TagLib_ID3v2_UserTextIdentificationFrame", "D_delete_TagLib_ID3v2_UserTextIdentificationFrame"));
  mixin(bindCode("TagLib_ID3v2_UserTextIdentificationFrame_Upcast", "D_TagLib_ID3v2_UserTextIdentificationFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_0", "D_new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_0"));
  mixin(bindCode("new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_1", "D_new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_1"));
  mixin(bindCode("delete_TagLib_ID3v2_UniqueFileIdentifierFrame", "D_delete_TagLib_ID3v2_UniqueFileIdentifierFrame"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_owner", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_owner"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_identifier", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_identifier"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_setOwner", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_setOwner"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_setIdentifier", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_setIdentifier"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_toString", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_UniqueFileIdentifierFrame_Upcast", "D_TagLib_ID3v2_UniqueFileIdentifierFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_UnsynchronizedLyricsFrame", "D_new_TagLib_ID3v2_UnsynchronizedLyricsFrame"));
  mixin(bindCode("delete_TagLib_ID3v2_UnsynchronizedLyricsFrame", "D_delete_TagLib_ID3v2_UnsynchronizedLyricsFrame"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_toString", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_language", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_language"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_description", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_description"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_text", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_text"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_setLanguage", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_setLanguage"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_setDescription", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_setText", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_setText"));
  mixin(bindCode("TagLib_ID3v2_UnsynchronizedLyricsFrame_Upcast", "D_TagLib_ID3v2_UnsynchronizedLyricsFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_UrlLinkFrame", "D_new_TagLib_ID3v2_UrlLinkFrame"));
  mixin(bindCode("delete_TagLib_ID3v2_UrlLinkFrame", "D_delete_TagLib_ID3v2_UrlLinkFrame"));
  mixin(bindCode("TagLib_ID3v2_UrlLinkFrame_url", "D_TagLib_ID3v2_UrlLinkFrame_url"));
  mixin(bindCode("TagLib_ID3v2_UrlLinkFrame_setUrl", "D_TagLib_ID3v2_UrlLinkFrame_setUrl"));
  mixin(bindCode("TagLib_ID3v2_UrlLinkFrame_setText", "D_TagLib_ID3v2_UrlLinkFrame_setText"));
  mixin(bindCode("TagLib_ID3v2_UrlLinkFrame_toString", "D_TagLib_ID3v2_UrlLinkFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_UrlLinkFrame_Upcast", "D_TagLib_ID3v2_UrlLinkFrame_Upcast"));
  mixin(bindCode("new_TagLib_ID3v2_UserUrlLinkFrame", "D_new_TagLib_ID3v2_UserUrlLinkFrame"));
  mixin(bindCode("delete_TagLib_ID3v2_UserUrlLinkFrame", "D_delete_TagLib_ID3v2_UserUrlLinkFrame"));
  mixin(bindCode("TagLib_ID3v2_UserUrlLinkFrame_toString", "D_TagLib_ID3v2_UserUrlLinkFrame_toString"));
  mixin(bindCode("TagLib_ID3v2_UserUrlLinkFrame_description", "D_TagLib_ID3v2_UserUrlLinkFrame_description"));
  mixin(bindCode("TagLib_ID3v2_UserUrlLinkFrame_setDescription", "D_TagLib_ID3v2_UserUrlLinkFrame_setDescription"));
  mixin(bindCode("TagLib_ID3v2_UserUrlLinkFrame_Upcast", "D_TagLib_ID3v2_UserUrlLinkFrame_Upcast"));
  mixin(bindCode("toUInt", "D_toUInt"));
  mixin(bindCode("fromUInt", "D_fromUInt"));
  mixin(bindCode("decode", "D_decode"));
  mixin(bindCode("new_TagLib_MP4_CoverArt__SWIG_0", "D_new_TagLib_MP4_CoverArt__SWIG_0"));
  mixin(bindCode("delete_TagLib_MP4_CoverArt", "D_delete_TagLib_MP4_CoverArt"));
  mixin(bindCode("new_TagLib_MP4_CoverArt__SWIG_1", "D_new_TagLib_MP4_CoverArt__SWIG_1"));
  mixin(bindCode("TagLib_MP4_CoverArt_format", "D_TagLib_MP4_CoverArt_format"));
  mixin(bindCode("TagLib_MP4_CoverArt_data", "D_TagLib_MP4_CoverArt_data"));
  mixin(bindCode("new_TagLib_MP4_File__SWIG_0", "D_new_TagLib_MP4_File__SWIG_0"));
  mixin(bindCode("new_TagLib_MP4_File__SWIG_1", "D_new_TagLib_MP4_File__SWIG_1"));
  mixin(bindCode("new_TagLib_MP4_File__SWIG_2", "D_new_TagLib_MP4_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_MP4_File", "D_delete_TagLib_MP4_File"));
  mixin(bindCode("TagLib_MP4_File_tag", "D_TagLib_MP4_File_tag"));
  mixin(bindCode("TagLib_MP4_File_audioProperties", "D_TagLib_MP4_File_audioProperties"));
  mixin(bindCode("TagLib_MP4_File_save", "D_TagLib_MP4_File_save"));
  mixin(bindCode("TagLib_MP4_File_Upcast", "D_TagLib_MP4_File_Upcast"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_0", "D_new_TagLib_MP4_Item__SWIG_0"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_1", "D_new_TagLib_MP4_Item__SWIG_1"));
  mixin(bindCode("delete_TagLib_MP4_Item", "D_delete_TagLib_MP4_Item"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_2", "D_new_TagLib_MP4_Item__SWIG_2"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_3", "D_new_TagLib_MP4_Item__SWIG_3"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_4", "D_new_TagLib_MP4_Item__SWIG_4"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_5", "D_new_TagLib_MP4_Item__SWIG_5"));
  mixin(bindCode("new_TagLib_MP4_Item__SWIG_6", "D_new_TagLib_MP4_Item__SWIG_6"));
  mixin(bindCode("TagLib_MP4_Item_toInt", "D_TagLib_MP4_Item_toInt"));
  mixin(bindCode("TagLib_MP4_Item_toBool", "D_TagLib_MP4_Item_toBool"));
  mixin(bindCode("TagLib_MP4_Item_toIntPair", "D_TagLib_MP4_Item_toIntPair"));
  mixin(bindCode("TagLib_MP4_Item_toStringList", "D_TagLib_MP4_Item_toStringList"));
  mixin(bindCode("TagLib_MP4_Item_toCoverArtList", "D_TagLib_MP4_Item_toCoverArtList"));
  mixin(bindCode("TagLib_MP4_Item_isValid", "D_TagLib_MP4_Item_isValid"));
  mixin(bindCode("new_TagLib_MP4_Properties__SWIG_0", "D_new_TagLib_MP4_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_MP4_Properties__SWIG_1", "D_new_TagLib_MP4_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_MP4_Properties", "D_delete_TagLib_MP4_Properties"));
  mixin(bindCode("TagLib_MP4_Properties_length", "D_TagLib_MP4_Properties_length"));
  mixin(bindCode("TagLib_MP4_Properties_bitrate", "D_TagLib_MP4_Properties_bitrate"));
  mixin(bindCode("TagLib_MP4_Properties_sampleRate", "D_TagLib_MP4_Properties_sampleRate"));
  mixin(bindCode("TagLib_MP4_Properties_channels", "D_TagLib_MP4_Properties_channels"));
  mixin(bindCode("TagLib_MP4_Properties_bitsPerSample", "D_TagLib_MP4_Properties_bitsPerSample"));
  mixin(bindCode("TagLib_MP4_Properties_Upcast", "D_TagLib_MP4_Properties_Upcast"));
  mixin(bindCode("new_TagLib_MP4_Tag", "D_new_TagLib_MP4_Tag"));
  mixin(bindCode("delete_TagLib_MP4_Tag", "D_delete_TagLib_MP4_Tag"));
  mixin(bindCode("TagLib_MP4_Tag_save", "D_TagLib_MP4_Tag_save"));
  mixin(bindCode("TagLib_MP4_Tag_title__SWIG_0", "D_TagLib_MP4_Tag_title__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_artist__SWIG_0", "D_TagLib_MP4_Tag_artist__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_album__SWIG_0", "D_TagLib_MP4_Tag_album__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_comment__SWIG_0", "D_TagLib_MP4_Tag_comment__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_genre__SWIG_0", "D_TagLib_MP4_Tag_genre__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_year__SWIG_0", "D_TagLib_MP4_Tag_year__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_track__SWIG_0", "D_TagLib_MP4_Tag_track__SWIG_0"));
  mixin(bindCode("TagLib_MP4_Tag_title__SWIG_1", "D_TagLib_MP4_Tag_title__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_artist__SWIG_1", "D_TagLib_MP4_Tag_artist__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_album__SWIG_1", "D_TagLib_MP4_Tag_album__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_comment__SWIG_1", "D_TagLib_MP4_Tag_comment__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_genre__SWIG_1", "D_TagLib_MP4_Tag_genre__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_year__SWIG_1", "D_TagLib_MP4_Tag_year__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_track__SWIG_1", "D_TagLib_MP4_Tag_track__SWIG_1"));
  mixin(bindCode("TagLib_MP4_Tag_itemListMap", "D_TagLib_MP4_Tag_itemListMap"));
  mixin(bindCode("TagLib_MP4_Tag_Upcast", "D_TagLib_MP4_Tag_Upcast"));
  mixin(bindCode("HeaderSize_get", "D_HeaderSize_get"));
  mixin(bindCode("new_TagLib_MPC_Properties__SWIG_0", "D_new_TagLib_MPC_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_MPC_Properties__SWIG_1", "D_new_TagLib_MPC_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_MPC_Properties", "D_delete_TagLib_MPC_Properties"));
  mixin(bindCode("TagLib_MPC_Properties_length", "D_TagLib_MPC_Properties_length"));
  mixin(bindCode("TagLib_MPC_Properties_bitrate", "D_TagLib_MPC_Properties_bitrate"));
  mixin(bindCode("TagLib_MPC_Properties_sampleRate", "D_TagLib_MPC_Properties_sampleRate"));
  mixin(bindCode("TagLib_MPC_Properties_channels", "D_TagLib_MPC_Properties_channels"));
  mixin(bindCode("TagLib_MPC_Properties_mpcVersion", "D_TagLib_MPC_Properties_mpcVersion"));
  mixin(bindCode("TagLib_MPC_Properties_Upcast", "D_TagLib_MPC_Properties_Upcast"));
  mixin(bindCode("new_TagLib_MPC_File__SWIG_0", "D_new_TagLib_MPC_File__SWIG_0"));
  mixin(bindCode("new_TagLib_MPC_File__SWIG_1", "D_new_TagLib_MPC_File__SWIG_1"));
  mixin(bindCode("new_TagLib_MPC_File__SWIG_2", "D_new_TagLib_MPC_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_MPC_File", "D_delete_TagLib_MPC_File"));
  mixin(bindCode("TagLib_MPC_File_tag", "D_TagLib_MPC_File_tag"));
  mixin(bindCode("TagLib_MPC_File_audioProperties", "D_TagLib_MPC_File_audioProperties"));
  mixin(bindCode("TagLib_MPC_File_save", "D_TagLib_MPC_File_save"));
  mixin(bindCode("TagLib_MPC_File_ID3v1Tag__SWIG_0", "D_TagLib_MPC_File_ID3v1Tag__SWIG_0"));
  mixin(bindCode("TagLib_MPC_File_ID3v1Tag__SWIG_1", "D_TagLib_MPC_File_ID3v1Tag__SWIG_1"));
  mixin(bindCode("TagLib_MPC_File_APETag__SWIG_0", "D_TagLib_MPC_File_APETag__SWIG_0"));
  mixin(bindCode("TagLib_MPC_File_APETag__SWIG_1", "D_TagLib_MPC_File_APETag__SWIG_1"));
  mixin(bindCode("TagLib_MPC_File_strip__SWIG_0", "D_TagLib_MPC_File_strip__SWIG_0"));
  mixin(bindCode("TagLib_MPC_File_strip__SWIG_1", "D_TagLib_MPC_File_strip__SWIG_1"));
  mixin(bindCode("TagLib_MPC_File_remove__SWIG_0", "D_TagLib_MPC_File_remove__SWIG_0"));
  mixin(bindCode("TagLib_MPC_File_remove__SWIG_1", "D_TagLib_MPC_File_remove__SWIG_1"));
  mixin(bindCode("TagLib_MPC_File_Upcast", "D_TagLib_MPC_File_Upcast"));
  mixin(bindCode("new_TagLib_MPEG_XingHeader", "D_new_TagLib_MPEG_XingHeader"));
  mixin(bindCode("delete_TagLib_MPEG_XingHeader", "D_delete_TagLib_MPEG_XingHeader"));
  mixin(bindCode("TagLib_MPEG_XingHeader_isValid", "D_TagLib_MPEG_XingHeader_isValid"));
  mixin(bindCode("TagLib_MPEG_XingHeader_totalFrames", "D_TagLib_MPEG_XingHeader_totalFrames"));
  mixin(bindCode("TagLib_MPEG_XingHeader_totalSize", "D_TagLib_MPEG_XingHeader_totalSize"));
  mixin(bindCode("TagLib_MPEG_XingHeader_xingHeaderOffset", "D_TagLib_MPEG_XingHeader_xingHeaderOffset"));
  mixin(bindCode("new_TagLib_MPEG_Properties__SWIG_0", "D_new_TagLib_MPEG_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_MPEG_Properties__SWIG_1", "D_new_TagLib_MPEG_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_MPEG_Properties", "D_delete_TagLib_MPEG_Properties"));
  mixin(bindCode("TagLib_MPEG_Properties_length", "D_TagLib_MPEG_Properties_length"));
  mixin(bindCode("TagLib_MPEG_Properties_bitrate", "D_TagLib_MPEG_Properties_bitrate"));
  mixin(bindCode("TagLib_MPEG_Properties_sampleRate", "D_TagLib_MPEG_Properties_sampleRate"));
  mixin(bindCode("TagLib_MPEG_Properties_channels", "D_TagLib_MPEG_Properties_channels"));
  mixin(bindCode("TagLib_MPEG_Properties_xingHeader", "D_TagLib_MPEG_Properties_xingHeader"));
  mixin(bindCode("TagLib_MPEG_Properties__version", "D_TagLib_MPEG_Properties__version"));
  mixin(bindCode("TagLib_MPEG_Properties_layer", "D_TagLib_MPEG_Properties_layer"));
  mixin(bindCode("TagLib_MPEG_Properties_protectionEnabled", "D_TagLib_MPEG_Properties_protectionEnabled"));
  mixin(bindCode("TagLib_MPEG_Properties_channelMode", "D_TagLib_MPEG_Properties_channelMode"));
  mixin(bindCode("TagLib_MPEG_Properties_isCopyrighted", "D_TagLib_MPEG_Properties_isCopyrighted"));
  mixin(bindCode("TagLib_MPEG_Properties_isOriginal", "D_TagLib_MPEG_Properties_isOriginal"));
  mixin(bindCode("TagLib_MPEG_Properties_Upcast", "D_TagLib_MPEG_Properties_Upcast"));
  mixin(bindCode("new_TagLib_MPEG_Header__SWIG_0", "D_new_TagLib_MPEG_Header__SWIG_0"));
  mixin(bindCode("new_TagLib_MPEG_Header__SWIG_1", "D_new_TagLib_MPEG_Header__SWIG_1"));
  mixin(bindCode("delete_TagLib_MPEG_Header", "D_delete_TagLib_MPEG_Header"));
  mixin(bindCode("TagLib_MPEG_Header_isValid", "D_TagLib_MPEG_Header_isValid"));
  mixin(bindCode("TagLib_MPEG_Header__version", "D_TagLib_MPEG_Header__version"));
  mixin(bindCode("TagLib_MPEG_Header_layer", "D_TagLib_MPEG_Header_layer"));
  mixin(bindCode("TagLib_MPEG_Header_protectionEnabled", "D_TagLib_MPEG_Header_protectionEnabled"));
  mixin(bindCode("TagLib_MPEG_Header_bitrate", "D_TagLib_MPEG_Header_bitrate"));
  mixin(bindCode("TagLib_MPEG_Header_sampleRate", "D_TagLib_MPEG_Header_sampleRate"));
  mixin(bindCode("TagLib_MPEG_Header_isPadded", "D_TagLib_MPEG_Header_isPadded"));
  mixin(bindCode("TagLib_MPEG_Header_channelMode", "D_TagLib_MPEG_Header_channelMode"));
  mixin(bindCode("TagLib_MPEG_Header_isCopyrighted", "D_TagLib_MPEG_Header_isCopyrighted"));
  mixin(bindCode("TagLib_MPEG_Header_isOriginal", "D_TagLib_MPEG_Header_isOriginal"));
  mixin(bindCode("TagLib_MPEG_Header_frameLength", "D_TagLib_MPEG_Header_frameLength"));
  mixin(bindCode("TagLib_MPEG_Header_samplesPerFrame", "D_TagLib_MPEG_Header_samplesPerFrame"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_0", "D_new_TagLib_MPEG_File__SWIG_0"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_1", "D_new_TagLib_MPEG_File__SWIG_1"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_2", "D_new_TagLib_MPEG_File__SWIG_2"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_3", "D_new_TagLib_MPEG_File__SWIG_3"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_4", "D_new_TagLib_MPEG_File__SWIG_4"));
  mixin(bindCode("new_TagLib_MPEG_File__SWIG_5", "D_new_TagLib_MPEG_File__SWIG_5"));
  mixin(bindCode("delete_TagLib_MPEG_File", "D_delete_TagLib_MPEG_File"));
  mixin(bindCode("TagLib_MPEG_File_tag", "D_TagLib_MPEG_File_tag"));
  mixin(bindCode("TagLib_MPEG_File_audioProperties", "D_TagLib_MPEG_File_audioProperties"));
  mixin(bindCode("TagLib_MPEG_File_save__SWIG_0", "D_TagLib_MPEG_File_save__SWIG_0"));
  mixin(bindCode("TagLib_MPEG_File_save__SWIG_1", "D_TagLib_MPEG_File_save__SWIG_1"));
  mixin(bindCode("TagLib_MPEG_File_save__SWIG_2", "D_TagLib_MPEG_File_save__SWIG_2"));
  mixin(bindCode("TagLib_MPEG_File_ID3v2Tag__SWIG_0", "D_TagLib_MPEG_File_ID3v2Tag__SWIG_0"));
  mixin(bindCode("TagLib_MPEG_File_ID3v2Tag__SWIG_1", "D_TagLib_MPEG_File_ID3v2Tag__SWIG_1"));
  mixin(bindCode("TagLib_MPEG_File_ID3v1Tag__SWIG_0", "D_TagLib_MPEG_File_ID3v1Tag__SWIG_0"));
  mixin(bindCode("TagLib_MPEG_File_ID3v1Tag__SWIG_1", "D_TagLib_MPEG_File_ID3v1Tag__SWIG_1"));
  mixin(bindCode("TagLib_MPEG_File_APETag__SWIG_0", "D_TagLib_MPEG_File_APETag__SWIG_0"));
  mixin(bindCode("TagLib_MPEG_File_APETag__SWIG_1", "D_TagLib_MPEG_File_APETag__SWIG_1"));
  mixin(bindCode("TagLib_MPEG_File_strip__SWIG_0", "D_TagLib_MPEG_File_strip__SWIG_0"));
  mixin(bindCode("TagLib_MPEG_File_strip__SWIG_1", "D_TagLib_MPEG_File_strip__SWIG_1"));
  mixin(bindCode("TagLib_MPEG_File_strip__SWIG_2", "D_TagLib_MPEG_File_strip__SWIG_2"));
  mixin(bindCode("TagLib_MPEG_File_setID3v2FrameFactory", "D_TagLib_MPEG_File_setID3v2FrameFactory"));
  mixin(bindCode("TagLib_MPEG_File_firstFrameOffset", "D_TagLib_MPEG_File_firstFrameOffset"));
  mixin(bindCode("TagLib_MPEG_File_nextFrameOffset", "D_TagLib_MPEG_File_nextFrameOffset"));
  mixin(bindCode("TagLib_MPEG_File_previousFrameOffset", "D_TagLib_MPEG_File_previousFrameOffset"));
  mixin(bindCode("TagLib_MPEG_File_lastFrameOffset", "D_TagLib_MPEG_File_lastFrameOffset"));
  mixin(bindCode("TagLib_MPEG_File_Upcast", "D_TagLib_MPEG_File_Upcast"));
  mixin(bindCode("new_TagLib_Ogg_Page", "D_new_TagLib_Ogg_Page"));
  mixin(bindCode("delete_TagLib_Ogg_Page", "D_delete_TagLib_Ogg_Page"));
  mixin(bindCode("TagLib_Ogg_Page_fileOffset", "D_TagLib_Ogg_Page_fileOffset"));
  mixin(bindCode("TagLib_Ogg_Page_header", "D_TagLib_Ogg_Page_header"));
  mixin(bindCode("TagLib_Ogg_Page_getCopyWithNewPageSequenceNumber", "D_TagLib_Ogg_Page_getCopyWithNewPageSequenceNumber"));
  mixin(bindCode("TagLib_Ogg_Page_firstPacketIndex", "D_TagLib_Ogg_Page_firstPacketIndex"));
  mixin(bindCode("TagLib_Ogg_Page_setFirstPacketIndex", "D_TagLib_Ogg_Page_setFirstPacketIndex"));
  mixin(bindCode("TagLib_Ogg_Page_containsPacket", "D_TagLib_Ogg_Page_containsPacket"));
  mixin(bindCode("TagLib_Ogg_Page_packetCount", "D_TagLib_Ogg_Page_packetCount"));
  mixin(bindCode("TagLib_Ogg_Page_packets", "D_TagLib_Ogg_Page_packets"));
  mixin(bindCode("TagLib_Ogg_Page_size", "D_TagLib_Ogg_Page_size"));
  mixin(bindCode("TagLib_Ogg_Page_render", "D_TagLib_Ogg_Page_render"));
  mixin(bindCode("TagLib_Ogg_Page_paginate__SWIG_0", "D_TagLib_Ogg_Page_paginate__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_Page_paginate__SWIG_1", "D_TagLib_Ogg_Page_paginate__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_Page_paginate__SWIG_2", "D_TagLib_Ogg_Page_paginate__SWIG_2"));
  mixin(bindCode("TagLib_Ogg_Page_paginate__SWIG_3", "D_TagLib_Ogg_Page_paginate__SWIG_3"));
  mixin(bindCode("new_TagLib_Ogg_PageHeader__SWIG_0", "D_new_TagLib_Ogg_PageHeader__SWIG_0"));
  mixin(bindCode("new_TagLib_Ogg_PageHeader__SWIG_1", "D_new_TagLib_Ogg_PageHeader__SWIG_1"));
  mixin(bindCode("new_TagLib_Ogg_PageHeader__SWIG_2", "D_new_TagLib_Ogg_PageHeader__SWIG_2"));
  mixin(bindCode("delete_TagLib_Ogg_PageHeader", "D_delete_TagLib_Ogg_PageHeader"));
  mixin(bindCode("TagLib_Ogg_PageHeader_isValid", "D_TagLib_Ogg_PageHeader_isValid"));
  mixin(bindCode("TagLib_Ogg_PageHeader_packetSizes", "D_TagLib_Ogg_PageHeader_packetSizes"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setPacketSizes", "D_TagLib_Ogg_PageHeader_setPacketSizes"));
  mixin(bindCode("TagLib_Ogg_PageHeader_firstPacketContinued", "D_TagLib_Ogg_PageHeader_firstPacketContinued"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setFirstPacketContinued", "D_TagLib_Ogg_PageHeader_setFirstPacketContinued"));
  mixin(bindCode("TagLib_Ogg_PageHeader_lastPacketCompleted", "D_TagLib_Ogg_PageHeader_lastPacketCompleted"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setLastPacketCompleted", "D_TagLib_Ogg_PageHeader_setLastPacketCompleted"));
  mixin(bindCode("TagLib_Ogg_PageHeader_firstPageOfStream", "D_TagLib_Ogg_PageHeader_firstPageOfStream"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setFirstPageOfStream", "D_TagLib_Ogg_PageHeader_setFirstPageOfStream"));
  mixin(bindCode("TagLib_Ogg_PageHeader_lastPageOfStream", "D_TagLib_Ogg_PageHeader_lastPageOfStream"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setLastPageOfStream", "D_TagLib_Ogg_PageHeader_setLastPageOfStream"));
  mixin(bindCode("TagLib_Ogg_PageHeader_absoluteGranularPosition", "D_TagLib_Ogg_PageHeader_absoluteGranularPosition"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setAbsoluteGranularPosition", "D_TagLib_Ogg_PageHeader_setAbsoluteGranularPosition"));
  mixin(bindCode("TagLib_Ogg_PageHeader_streamSerialNumber", "D_TagLib_Ogg_PageHeader_streamSerialNumber"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setStreamSerialNumber", "D_TagLib_Ogg_PageHeader_setStreamSerialNumber"));
  mixin(bindCode("TagLib_Ogg_PageHeader_pageSequenceNumber", "D_TagLib_Ogg_PageHeader_pageSequenceNumber"));
  mixin(bindCode("TagLib_Ogg_PageHeader_setPageSequenceNumber", "D_TagLib_Ogg_PageHeader_setPageSequenceNumber"));
  mixin(bindCode("TagLib_Ogg_PageHeader_size", "D_TagLib_Ogg_PageHeader_size"));
  mixin(bindCode("TagLib_Ogg_PageHeader_dataSize", "D_TagLib_Ogg_PageHeader_dataSize"));
  mixin(bindCode("TagLib_Ogg_PageHeader_render", "D_TagLib_Ogg_PageHeader_render"));
  mixin(bindCode("new_TagLib_Ogg_XiphComment__SWIG_0", "D_new_TagLib_Ogg_XiphComment__SWIG_0"));
  mixin(bindCode("new_TagLib_Ogg_XiphComment__SWIG_1", "D_new_TagLib_Ogg_XiphComment__SWIG_1"));
  mixin(bindCode("delete_TagLib_Ogg_XiphComment", "D_delete_TagLib_Ogg_XiphComment"));
  mixin(bindCode("TagLib_Ogg_XiphComment_title__SWIG_0", "D_TagLib_Ogg_XiphComment_title__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_artist__SWIG_0", "D_TagLib_Ogg_XiphComment_artist__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_album__SWIG_0", "D_TagLib_Ogg_XiphComment_album__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_comment__SWIG_0", "D_TagLib_Ogg_XiphComment_comment__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_genre__SWIG_0", "D_TagLib_Ogg_XiphComment_genre__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_year__SWIG_0", "D_TagLib_Ogg_XiphComment_year__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_track__SWIG_0", "D_TagLib_Ogg_XiphComment_track__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_title__SWIG_1", "D_TagLib_Ogg_XiphComment_title__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_artist__SWIG_1", "D_TagLib_Ogg_XiphComment_artist__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_album__SWIG_1", "D_TagLib_Ogg_XiphComment_album__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_comment__SWIG_1", "D_TagLib_Ogg_XiphComment_comment__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_genre__SWIG_1", "D_TagLib_Ogg_XiphComment_genre__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_year__SWIG_1", "D_TagLib_Ogg_XiphComment_year__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_track__SWIG_1", "D_TagLib_Ogg_XiphComment_track__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_isEmpty", "D_TagLib_Ogg_XiphComment_isEmpty"));
  mixin(bindCode("TagLib_Ogg_XiphComment_fieldCount", "D_TagLib_Ogg_XiphComment_fieldCount"));
  mixin(bindCode("TagLib_Ogg_XiphComment_fieldListMap", "D_TagLib_Ogg_XiphComment_fieldListMap"));
  mixin(bindCode("TagLib_Ogg_XiphComment_vendorID", "D_TagLib_Ogg_XiphComment_vendorID"));
  mixin(bindCode("TagLib_Ogg_XiphComment_addField__SWIG_0", "D_TagLib_Ogg_XiphComment_addField__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_addField__SWIG_1", "D_TagLib_Ogg_XiphComment_addField__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_removeField__SWIG_0", "D_TagLib_Ogg_XiphComment_removeField__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_removeField__SWIG_1", "D_TagLib_Ogg_XiphComment_removeField__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_contains", "D_TagLib_Ogg_XiphComment_contains"));
  mixin(bindCode("TagLib_Ogg_XiphComment_render__SWIG_0", "D_TagLib_Ogg_XiphComment_render__SWIG_0"));
  mixin(bindCode("TagLib_Ogg_XiphComment_render__SWIG_1", "D_TagLib_Ogg_XiphComment_render__SWIG_1"));
  mixin(bindCode("TagLib_Ogg_XiphComment_Upcast", "D_TagLib_Ogg_XiphComment_Upcast"));
  mixin(bindCode("delete_TagLib_Ogg_File", "D_delete_TagLib_Ogg_File"));
  mixin(bindCode("TagLib_Ogg_File_packet", "D_TagLib_Ogg_File_packet"));
  mixin(bindCode("TagLib_Ogg_File_setPacket", "D_TagLib_Ogg_File_setPacket"));
  mixin(bindCode("TagLib_Ogg_File_firstPageHeader", "D_TagLib_Ogg_File_firstPageHeader"));
  mixin(bindCode("TagLib_Ogg_File_lastPageHeader", "D_TagLib_Ogg_File_lastPageHeader"));
  mixin(bindCode("TagLib_Ogg_File_save", "D_TagLib_Ogg_File_save"));
  mixin(bindCode("TagLib_Ogg_File_Upcast", "D_TagLib_Ogg_File_Upcast"));
  mixin(bindCode("new_TagLib_Ogg_FLAC_File__SWIG_0", "D_new_TagLib_Ogg_FLAC_File__SWIG_0"));
  mixin(bindCode("new_TagLib_Ogg_FLAC_File__SWIG_1", "D_new_TagLib_Ogg_FLAC_File__SWIG_1"));
  mixin(bindCode("new_TagLib_Ogg_FLAC_File__SWIG_2", "D_new_TagLib_Ogg_FLAC_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_Ogg_FLAC_File", "D_delete_TagLib_Ogg_FLAC_File"));
  mixin(bindCode("TagLib_Ogg_FLAC_File_tag", "D_TagLib_Ogg_FLAC_File_tag"));
  mixin(bindCode("TagLib_Ogg_FLAC_File_audioProperties", "D_TagLib_Ogg_FLAC_File_audioProperties"));
  mixin(bindCode("TagLib_Ogg_FLAC_File_save", "D_TagLib_Ogg_FLAC_File_save"));
  mixin(bindCode("TagLib_Ogg_FLAC_File_streamLength", "D_TagLib_Ogg_FLAC_File_streamLength"));
  mixin(bindCode("TagLib_Ogg_FLAC_File_Upcast", "D_TagLib_Ogg_FLAC_File_Upcast"));
  mixin(bindCode("new_TagLib_Ogg_Speex_Properties__SWIG_0", "D_new_TagLib_Ogg_Speex_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_Ogg_Speex_Properties__SWIG_1", "D_new_TagLib_Ogg_Speex_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_Ogg_Speex_Properties", "D_delete_TagLib_Ogg_Speex_Properties"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_length", "D_TagLib_Ogg_Speex_Properties_length"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_bitrate", "D_TagLib_Ogg_Speex_Properties_bitrate"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_sampleRate", "D_TagLib_Ogg_Speex_Properties_sampleRate"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_channels", "D_TagLib_Ogg_Speex_Properties_channels"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_speexVersion", "D_TagLib_Ogg_Speex_Properties_speexVersion"));
  mixin(bindCode("TagLib_Ogg_Speex_Properties_Upcast", "D_TagLib_Ogg_Speex_Properties_Upcast"));
  mixin(bindCode("new_TagLib_Ogg_Speex_File__SWIG_0", "D_new_TagLib_Ogg_Speex_File__SWIG_0"));
  mixin(bindCode("new_TagLib_Ogg_Speex_File__SWIG_1", "D_new_TagLib_Ogg_Speex_File__SWIG_1"));
  mixin(bindCode("new_TagLib_Ogg_Speex_File__SWIG_2", "D_new_TagLib_Ogg_Speex_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_Ogg_Speex_File", "D_delete_TagLib_Ogg_Speex_File"));
  mixin(bindCode("TagLib_Ogg_Speex_File_tag", "D_TagLib_Ogg_Speex_File_tag"));
  mixin(bindCode("TagLib_Ogg_Speex_File_audioProperties", "D_TagLib_Ogg_Speex_File_audioProperties"));
  mixin(bindCode("TagLib_Ogg_Speex_File_save", "D_TagLib_Ogg_Speex_File_save"));
  mixin(bindCode("TagLib_Ogg_Speex_File_Upcast", "D_TagLib_Ogg_Speex_File_Upcast"));
  mixin(bindCode("new_TagLib_Vorbis_Properties__SWIG_0", "D_new_TagLib_Vorbis_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_Vorbis_Properties__SWIG_1", "D_new_TagLib_Vorbis_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_Vorbis_Properties", "D_delete_TagLib_Vorbis_Properties"));
  mixin(bindCode("TagLib_Vorbis_Properties_length", "D_TagLib_Vorbis_Properties_length"));
  mixin(bindCode("TagLib_Vorbis_Properties_bitrate", "D_TagLib_Vorbis_Properties_bitrate"));
  mixin(bindCode("TagLib_Vorbis_Properties_sampleRate", "D_TagLib_Vorbis_Properties_sampleRate"));
  mixin(bindCode("TagLib_Vorbis_Properties_channels", "D_TagLib_Vorbis_Properties_channels"));
  mixin(bindCode("TagLib_Vorbis_Properties_vorbisVersion", "D_TagLib_Vorbis_Properties_vorbisVersion"));
  mixin(bindCode("TagLib_Vorbis_Properties_bitrateMaximum", "D_TagLib_Vorbis_Properties_bitrateMaximum"));
  mixin(bindCode("TagLib_Vorbis_Properties_bitrateNominal", "D_TagLib_Vorbis_Properties_bitrateNominal"));
  mixin(bindCode("TagLib_Vorbis_Properties_bitrateMinimum", "D_TagLib_Vorbis_Properties_bitrateMinimum"));
  mixin(bindCode("TagLib_Vorbis_Properties_Upcast", "D_TagLib_Vorbis_Properties_Upcast"));
  mixin(bindCode("new_TagLib_Vorbis_File__SWIG_0", "D_new_TagLib_Vorbis_File__SWIG_0"));
  mixin(bindCode("new_TagLib_Vorbis_File__SWIG_1", "D_new_TagLib_Vorbis_File__SWIG_1"));
  mixin(bindCode("new_TagLib_Vorbis_File__SWIG_2", "D_new_TagLib_Vorbis_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_Vorbis_File", "D_delete_TagLib_Vorbis_File"));
  mixin(bindCode("TagLib_Vorbis_File_tag", "D_TagLib_Vorbis_File_tag"));
  mixin(bindCode("TagLib_Vorbis_File_audioProperties", "D_TagLib_Vorbis_File_audioProperties"));
  mixin(bindCode("TagLib_Vorbis_File_save", "D_TagLib_Vorbis_File_save"));
  mixin(bindCode("TagLib_Vorbis_File_Upcast", "D_TagLib_Vorbis_File_Upcast"));
  mixin(bindCode("delete_TagLib_RIFF_File", "D_delete_TagLib_RIFF_File"));
  mixin(bindCode("TagLib_RIFF_File_Upcast", "D_TagLib_RIFF_File_Upcast"));
  mixin(bindCode("new_TagLib_RIFF_AIFF_Properties", "D_new_TagLib_RIFF_AIFF_Properties"));
  mixin(bindCode("delete_TagLib_RIFF_AIFF_Properties", "D_delete_TagLib_RIFF_AIFF_Properties"));
  mixin(bindCode("TagLib_RIFF_AIFF_Properties_length", "D_TagLib_RIFF_AIFF_Properties_length"));
  mixin(bindCode("TagLib_RIFF_AIFF_Properties_bitrate", "D_TagLib_RIFF_AIFF_Properties_bitrate"));
  mixin(bindCode("TagLib_RIFF_AIFF_Properties_sampleRate", "D_TagLib_RIFF_AIFF_Properties_sampleRate"));
  mixin(bindCode("TagLib_RIFF_AIFF_Properties_channels", "D_TagLib_RIFF_AIFF_Properties_channels"));
  mixin(bindCode("TagLib_RIFF_AIFF_Properties_Upcast", "D_TagLib_RIFF_AIFF_Properties_Upcast"));
  mixin(bindCode("new_TagLib_RIFF_AIFF_File__SWIG_0", "D_new_TagLib_RIFF_AIFF_File__SWIG_0"));
  mixin(bindCode("new_TagLib_RIFF_AIFF_File__SWIG_1", "D_new_TagLib_RIFF_AIFF_File__SWIG_1"));
  mixin(bindCode("new_TagLib_RIFF_AIFF_File__SWIG_2", "D_new_TagLib_RIFF_AIFF_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_RIFF_AIFF_File", "D_delete_TagLib_RIFF_AIFF_File"));
  mixin(bindCode("TagLib_RIFF_AIFF_File_tag", "D_TagLib_RIFF_AIFF_File_tag"));
  mixin(bindCode("TagLib_RIFF_AIFF_File_audioProperties", "D_TagLib_RIFF_AIFF_File_audioProperties"));
  mixin(bindCode("TagLib_RIFF_AIFF_File_save", "D_TagLib_RIFF_AIFF_File_save"));
  mixin(bindCode("TagLib_RIFF_AIFF_File_Upcast", "D_TagLib_RIFF_AIFF_File_Upcast"));
  mixin(bindCode("new_TagLib_RIFF_WAV_Properties", "D_new_TagLib_RIFF_WAV_Properties"));
  mixin(bindCode("delete_TagLib_RIFF_WAV_Properties", "D_delete_TagLib_RIFF_WAV_Properties"));
  mixin(bindCode("TagLib_RIFF_WAV_Properties_length", "D_TagLib_RIFF_WAV_Properties_length"));
  mixin(bindCode("TagLib_RIFF_WAV_Properties_bitrate", "D_TagLib_RIFF_WAV_Properties_bitrate"));
  mixin(bindCode("TagLib_RIFF_WAV_Properties_sampleRate", "D_TagLib_RIFF_WAV_Properties_sampleRate"));
  mixin(bindCode("TagLib_RIFF_WAV_Properties_channels", "D_TagLib_RIFF_WAV_Properties_channels"));
  mixin(bindCode("TagLib_RIFF_WAV_Properties_Upcast", "D_TagLib_RIFF_WAV_Properties_Upcast"));
  mixin(bindCode("new_TagLib_RIFF_WAV_File__SWIG_0", "D_new_TagLib_RIFF_WAV_File__SWIG_0"));
  mixin(bindCode("new_TagLib_RIFF_WAV_File__SWIG_1", "D_new_TagLib_RIFF_WAV_File__SWIG_1"));
  mixin(bindCode("new_TagLib_RIFF_WAV_File__SWIG_2", "D_new_TagLib_RIFF_WAV_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_RIFF_WAV_File", "D_delete_TagLib_RIFF_WAV_File"));
  mixin(bindCode("TagLib_RIFF_WAV_File_tag", "D_TagLib_RIFF_WAV_File_tag"));
  mixin(bindCode("TagLib_RIFF_WAV_File_audioProperties", "D_TagLib_RIFF_WAV_File_audioProperties"));
  mixin(bindCode("TagLib_RIFF_WAV_File_save", "D_TagLib_RIFF_WAV_File_save"));
  mixin(bindCode("TagLib_RIFF_WAV_File_Upcast", "D_TagLib_RIFF_WAV_File_Upcast"));
  mixin(bindCode("new_TagLib_TrueAudio_Properties__SWIG_0", "D_new_TagLib_TrueAudio_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_TrueAudio_Properties__SWIG_1", "D_new_TagLib_TrueAudio_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_TrueAudio_Properties", "D_delete_TagLib_TrueAudio_Properties"));
  mixin(bindCode("TagLib_TrueAudio_Properties_length", "D_TagLib_TrueAudio_Properties_length"));
  mixin(bindCode("TagLib_TrueAudio_Properties_bitrate", "D_TagLib_TrueAudio_Properties_bitrate"));
  mixin(bindCode("TagLib_TrueAudio_Properties_sampleRate", "D_TagLib_TrueAudio_Properties_sampleRate"));
  mixin(bindCode("TagLib_TrueAudio_Properties_channels", "D_TagLib_TrueAudio_Properties_channels"));
  mixin(bindCode("TagLib_TrueAudio_Properties_bitsPerSample", "D_TagLib_TrueAudio_Properties_bitsPerSample"));
  mixin(bindCode("TagLib_TrueAudio_Properties_ttaVersion", "D_TagLib_TrueAudio_Properties_ttaVersion"));
  mixin(bindCode("TagLib_TrueAudio_Properties_Upcast", "D_TagLib_TrueAudio_Properties_Upcast"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_0", "D_new_TagLib_TrueAudio_File__SWIG_0"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_1", "D_new_TagLib_TrueAudio_File__SWIG_1"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_2", "D_new_TagLib_TrueAudio_File__SWIG_2"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_3", "D_new_TagLib_TrueAudio_File__SWIG_3"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_4", "D_new_TagLib_TrueAudio_File__SWIG_4"));
  mixin(bindCode("new_TagLib_TrueAudio_File__SWIG_5", "D_new_TagLib_TrueAudio_File__SWIG_5"));
  mixin(bindCode("delete_TagLib_TrueAudio_File", "D_delete_TagLib_TrueAudio_File"));
  mixin(bindCode("TagLib_TrueAudio_File_tag", "D_TagLib_TrueAudio_File_tag"));
  mixin(bindCode("TagLib_TrueAudio_File_audioProperties", "D_TagLib_TrueAudio_File_audioProperties"));
  mixin(bindCode("TagLib_TrueAudio_File_setID3v2FrameFactory", "D_TagLib_TrueAudio_File_setID3v2FrameFactory"));
  mixin(bindCode("TagLib_TrueAudio_File_save", "D_TagLib_TrueAudio_File_save"));
  mixin(bindCode("TagLib_TrueAudio_File_ID3v1Tag__SWIG_0", "D_TagLib_TrueAudio_File_ID3v1Tag__SWIG_0"));
  mixin(bindCode("TagLib_TrueAudio_File_ID3v1Tag__SWIG_1", "D_TagLib_TrueAudio_File_ID3v1Tag__SWIG_1"));
  mixin(bindCode("TagLib_TrueAudio_File_ID3v2Tag__SWIG_0", "D_TagLib_TrueAudio_File_ID3v2Tag__SWIG_0"));
  mixin(bindCode("TagLib_TrueAudio_File_ID3v2Tag__SWIG_1", "D_TagLib_TrueAudio_File_ID3v2Tag__SWIG_1"));
  mixin(bindCode("TagLib_TrueAudio_File_strip__SWIG_0", "D_TagLib_TrueAudio_File_strip__SWIG_0"));
  mixin(bindCode("TagLib_TrueAudio_File_strip__SWIG_1", "D_TagLib_TrueAudio_File_strip__SWIG_1"));
  mixin(bindCode("TagLib_TrueAudio_File_Upcast", "D_TagLib_TrueAudio_File_Upcast"));
  mixin(bindCode("new_TagLib_WavPack_Properties__SWIG_0", "D_new_TagLib_WavPack_Properties__SWIG_0"));
  mixin(bindCode("new_TagLib_WavPack_Properties__SWIG_1", "D_new_TagLib_WavPack_Properties__SWIG_1"));
  mixin(bindCode("delete_TagLib_WavPack_Properties", "D_delete_TagLib_WavPack_Properties"));
  mixin(bindCode("TagLib_WavPack_Properties_length", "D_TagLib_WavPack_Properties_length"));
  mixin(bindCode("TagLib_WavPack_Properties_bitrate", "D_TagLib_WavPack_Properties_bitrate"));
  mixin(bindCode("TagLib_WavPack_Properties_sampleRate", "D_TagLib_WavPack_Properties_sampleRate"));
  mixin(bindCode("TagLib_WavPack_Properties_channels", "D_TagLib_WavPack_Properties_channels"));
  mixin(bindCode("TagLib_WavPack_Properties_bitsPerSample", "D_TagLib_WavPack_Properties_bitsPerSample"));
  mixin(bindCode("TagLib_WavPack_Properties__version", "D_TagLib_WavPack_Properties__version"));
  mixin(bindCode("TagLib_WavPack_Properties_Upcast", "D_TagLib_WavPack_Properties_Upcast"));
  mixin(bindCode("new_TagLib_WavPack_File__SWIG_0", "D_new_TagLib_WavPack_File__SWIG_0"));
  mixin(bindCode("new_TagLib_WavPack_File__SWIG_1", "D_new_TagLib_WavPack_File__SWIG_1"));
  mixin(bindCode("new_TagLib_WavPack_File__SWIG_2", "D_new_TagLib_WavPack_File__SWIG_2"));
  mixin(bindCode("delete_TagLib_WavPack_File", "D_delete_TagLib_WavPack_File"));
  mixin(bindCode("TagLib_WavPack_File_tag", "D_TagLib_WavPack_File_tag"));
  mixin(bindCode("TagLib_WavPack_File_audioProperties", "D_TagLib_WavPack_File_audioProperties"));
  mixin(bindCode("TagLib_WavPack_File_save", "D_TagLib_WavPack_File_save"));
  mixin(bindCode("TagLib_WavPack_File_ID3v1Tag__SWIG_0", "D_TagLib_WavPack_File_ID3v1Tag__SWIG_0"));
  mixin(bindCode("TagLib_WavPack_File_ID3v1Tag__SWIG_1", "D_TagLib_WavPack_File_ID3v1Tag__SWIG_1"));
  mixin(bindCode("TagLib_WavPack_File_APETag__SWIG_0", "D_TagLib_WavPack_File_APETag__SWIG_0"));
  mixin(bindCode("TagLib_WavPack_File_APETag__SWIG_1", "D_TagLib_WavPack_File_APETag__SWIG_1"));
  mixin(bindCode("TagLib_WavPack_File_strip__SWIG_0", "D_TagLib_WavPack_File_strip__SWIG_0"));
  mixin(bindCode("TagLib_WavPack_File_strip__SWIG_1", "D_TagLib_WavPack_File_strip__SWIG_1"));
  mixin(bindCode("TagLib_WavPack_File_Upcast", "D_TagLib_WavPack_File_Upcast"));
}

//#if !defined(SWIG_D_NO_EXCEPTION_HELPER)
extern(C) void function(
  SwigExceptionCallback exceptionCallback,
  SwigExceptionCallback illegalArgumentCallback,
  SwigExceptionCallback illegalElementCallback,
  SwigExceptionCallback ioCallback,
  SwigExceptionCallback noSuchElementCallback) swigRegisterExceptionCallbacks;
//#endif // SWIG_D_NO_EXCEPTION_HELPER

//#if !defined(SWIG_D_NO_STRING_HELPER)
extern(C) void function(SwigStringCallback callback) swigRegisterStringCallback;
//#endif // SWIG_D_NO_STRING_HELPER


mixin template SwigOperatorDefinitions() {
  public override bool opEquals(Object o) {
    if (auto rhs = cast(typeof(this))o) {
      if (swigCPtr == rhs.swigCPtr) return true;
      static if (is(typeof(swigOpEquals(rhs)))) {
        return swigOpEquals(rhs);
      } else {
        return false; 
      }
    }
    return super.opEquals(o);
  }

  
  public override int opCmp(Object o) {
    static if (__traits(compiles, swigOpLt(typeof(this).init) &&
        swigOpEquals(typeof(this).init))) {
      if (auto rhs = cast(typeof(this))o) {
        if (swigOpLt(rhs)) {
          return -1;
        } else if (swigOpEquals(rhs)) {
          return 0;
        } else {
          return 1;
        }
      }
    }
    return super.opCmp(o);
  }

  private template swigOpBinary(string operator, string name) {
    enum swigOpBinary = `public void opOpAssign(string op, T)(T rhs) if (op == "` ~ operator ~
      `" && __traits(compiles, swigOp` ~ name ~ `Assign(rhs))) { swigOp` ~ name ~ `Assign(rhs);}` ~
      `public auto opBinary(string op, T)(T rhs) if (op == "` ~ operator ~
      `" && __traits(compiles, swigOp` ~ name ~ `(rhs))) { return swigOp` ~ name ~ `(rhs);}`;
  }
  mixin(swigOpBinary!("+", "Add"));
  mixin(swigOpBinary!("-", "Sub"));
  mixin(swigOpBinary!("*", "Mul"));
  mixin(swigOpBinary!("/", "Div"));
  mixin(swigOpBinary!("%", "Mod"));
  mixin(swigOpBinary!("&", "And"));
  mixin(swigOpBinary!("|", "Or"));
  mixin(swigOpBinary!("^", "Xor"));
  mixin(swigOpBinary!("<<", "Shl"));
  mixin(swigOpBinary!(">>", "Shr"));
  
  private template swigOpUnary(string operator, string name) {
    enum swigOpUnary = `public auto opUnary(string op)() if (op == "` ~ operator ~
      `" && __traits(compiles, swigOp` ~ name ~ `())) { return swigOp` ~ name ~ `();}`;   
  }
  mixin(swigOpUnary!("+", "Pos"));
  mixin(swigOpUnary!("-", "Neg"));
  mixin(swigOpUnary!("~", "Com"));
  mixin(swigOpUnary!("++", "Inc"));
  mixin(swigOpUnary!("--", "Dec"));


}


private class SwigExceptionHelper {
  static this() {
	// The D1/Tango version maps C++ exceptions to multiple exception types.
    swigRegisterExceptionCallbacks(
      &setException,
      &setException,
      &setException,
      &setException,
      &setException
    );
  }

  static void setException(char* message) {
    auto exception = new object.Exception(std.conv.to!string(message).idup);
    exception.next = SwigPendingException.retrieve();
    SwigPendingException.set(exception);
  }
}

package struct SwigPendingException {
public:
  static this() {
    m_sPendingCount = 0;
    m_sPendingException = null;
  }

  static bool isPending() {
    bool pending = false;
    if (m_sPendingCount > 0) {
      if (m_sPendingException !is null) {
        pending = true;
      }
    }
    return pending;
  }

  static void set(object.Exception e) {
    if (m_sPendingException !is null) {
      throw new object.Exception("FATAL: An earlier pending exception from C/C++ code " ~
        "was missed and thus not thrown (" ~ m_sPendingException.classinfo.name ~
        ": " ~ m_sPendingException.msg ~ ")!", e);
    }

    m_sPendingException = e;
    synchronized {
      ++m_sPendingCount;
    }
  }

  static object.Exception retrieve() {
    object.Exception e = null;
    if (m_sPendingCount > 0) {
      if (m_sPendingException !is null) {
        e = m_sPendingException;
        m_sPendingException = null;
        synchronized {
          --m_sPendingCount;
        }
      }
    }
    return e;
  }

private:
  // The pending exception counter is stored thread-global.
  static shared int m_sPendingCount;

  // The reference to the pending exception (if any) is stored thread-local.
  static object.Exception m_sPendingException;
}
alias void function(const char* message) SwigExceptionCallback;


private class SwigStringHelper {
  static this() {
    swigRegisterStringCallback(&createString);
  }

  static const(char)* createString(const(char*) cString) {
    // We are effectively dup'ing the string here.
    // TODO: Is this also correct for D2/Phobos?
    return std.string.toStringz(std.conv.to!string(cString));
  }
}
alias const(char)* function(const(char*) cString) SwigStringCallback;

extern(C) int function() TAGLIB_MAJOR_VERSION_get;
extern(C) int function() TAGLIB_MINOR_VERSION_get;
extern(C) int function() TAGLIB_PATCH_VERSION_get;
extern(C) void* function() new_TagLib_ByteVector__SWIG_0;
extern(C) void* function(uint jarg1, char jarg2) new_TagLib_ByteVector__SWIG_1;
extern(C) void* function(uint jarg1) new_TagLib_ByteVector__SWIG_2;
extern(C) void* function(void* jarg1) new_TagLib_ByteVector__SWIG_3;
extern(C) void* function(char jarg1) new_TagLib_ByteVector__SWIG_4;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_ByteVector__SWIG_5;
extern(C) void* function(const(char)* jarg1) new_TagLib_ByteVector__SWIG_6;
extern(C) void function(void* jarg1) delete_TagLib_ByteVector;
extern(C) void* function(void* jarg1, const(char)* jarg2, uint jarg3) TagLib_ByteVector_setData__SWIG_0;
extern(C) void* function(void* jarg1, const(char)* jarg2) TagLib_ByteVector_setData__SWIG_1;
extern(C) const(char)* function(void* jarg1) TagLib_ByteVector_data__SWIG_0;
extern(C) void* function(void* jarg1, uint jarg2, uint jarg3) TagLib_ByteVector_mid__SWIG_0;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_ByteVector_mid__SWIG_1;
extern(C) char function(void* jarg1, uint jarg2) TagLib_ByteVector_at;
extern(C) int function(void* jarg1, void* jarg2, uint jarg3, int jarg4) TagLib_ByteVector_find__SWIG_0;
extern(C) int function(void* jarg1, void* jarg2, uint jarg3) TagLib_ByteVector_find__SWIG_1;
extern(C) int function(void* jarg1, void* jarg2) TagLib_ByteVector_find__SWIG_2;
extern(C) int function(void* jarg1, void* jarg2, uint jarg3, int jarg4) TagLib_ByteVector_rfind__SWIG_0;
extern(C) int function(void* jarg1, void* jarg2, uint jarg3) TagLib_ByteVector_rfind__SWIG_1;
extern(C) int function(void* jarg1, void* jarg2) TagLib_ByteVector_rfind__SWIG_2;
extern(C) uint function(void* jarg1, void* jarg2, uint jarg3, uint jarg4, uint jarg5) TagLib_ByteVector_containsAt__SWIG_0;
extern(C) uint function(void* jarg1, void* jarg2, uint jarg3, uint jarg4) TagLib_ByteVector_containsAt__SWIG_1;
extern(C) uint function(void* jarg1, void* jarg2, uint jarg3) TagLib_ByteVector_containsAt__SWIG_2;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_ByteVector_startsWith;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_ByteVector_endsWith;
extern(C) void* function(void* jarg1, void* jarg2, void* jarg3) TagLib_ByteVector_replace;
extern(C) int function(void* jarg1, void* jarg2) TagLib_ByteVector_endsWithPartialMatch;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ByteVector_append;
extern(C) void* function(void* jarg1) TagLib_ByteVector_clear;
extern(C) uint function(void* jarg1) TagLib_ByteVector_size;
extern(C) void* function(void* jarg1, uint jarg2, char jarg3) TagLib_ByteVector_resize__SWIG_0;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_ByteVector_resize__SWIG_1;
extern(C) void* function(void* jarg1) TagLib_ByteVector_begin__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_ByteVector_end__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ByteVector_isNull;
extern(C) uint function(void* jarg1) TagLib_ByteVector_isEmpty;
extern(C) uint function(void* jarg1) TagLib_ByteVector_checksum;
extern(C) uint function(void* jarg1, uint jarg2) TagLib_ByteVector_toUInt__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ByteVector_toUInt__SWIG_1;
extern(C) short function(void* jarg1, uint jarg2) TagLib_ByteVector_toShort__SWIG_0;
extern(C) short function(void* jarg1) TagLib_ByteVector_toShort__SWIG_1;
extern(C) long function(void* jarg1, uint jarg2) TagLib_ByteVector_toLongLong__SWIG_0;
extern(C) long function(void* jarg1) TagLib_ByteVector_toLongLong__SWIG_1;
extern(C) void* function(uint jarg1, uint jarg2) TagLib_ByteVector_fromUInt__SWIG_0;
extern(C) void* function(uint jarg1) TagLib_ByteVector_fromUInt__SWIG_1;
extern(C) void* function(short jarg1, uint jarg2) TagLib_ByteVector_fromShort__SWIG_0;
extern(C) void* function(short jarg1) TagLib_ByteVector_fromShort__SWIG_1;
extern(C) void* function(long jarg1, uint jarg2) TagLib_ByteVector_fromLongLong__SWIG_0;
extern(C) void* function(long jarg1) TagLib_ByteVector_fromLongLong__SWIG_1;
extern(C) void* function(const(char)* jarg1, uint jarg2) TagLib_ByteVector_fromCString__SWIG_0;
extern(C) void* function(const(char)* jarg1) TagLib_ByteVector_fromCString__SWIG_1;
extern(C) char function(void* jarg1, int jarg2) TagLib_ByteVector_opIndex__SWIG_0;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_ByteVector_swigOpEquals__SWIG_0;
extern(C) uint function(void* jarg1, const(char)* jarg2) TagLib_ByteVector_swigOpEquals__SWIG_1;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_ByteVector_swigOpLt;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_ByteVector_swigOpGt;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ByteVector_swigOpAdd;
extern(C) void function(void* jarg1) TagLib_ByteVector__null_set;
extern(C) void* function() TagLib_ByteVector__null_get;
extern(C) void* function() new_bvList__SWIG_0;
extern(C) void* function(void* jarg1) new_bvList__SWIG_1;
extern(C) void function(void* jarg1) delete_bvList;
extern(C) void* function(void* jarg1) bvList_begin__SWIG_0;
extern(C) void* function(void* jarg1) bvList_end__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2, void* jarg3) bvList_insert;
extern(C) void* function(void* jarg1, void* jarg2, uint jarg3) bvList_sortedInsert__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) bvList_sortedInsert__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) bvList_append__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) bvList_append__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) bvList_prepend__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) bvList_prepend__SWIG_1;
extern(C) void* function(void* jarg1) bvList_clear;
extern(C) uint function(void* jarg1) bvList_size;
extern(C) uint function(void* jarg1) bvList_isEmpty;
extern(C) void* function(void* jarg1, void* jarg2) bvList_find__SWIG_0;
extern(C) uint function(void* jarg1, void* jarg2) bvList_contains;
extern(C) void* function(void* jarg1, void* jarg2) bvList_erase;
extern(C) void* function(void* jarg1) bvList_front__SWIG_0;
extern(C) void* function(void* jarg1) bvList_back__SWIG_0;
extern(C) void function(void* jarg1, uint jarg2) bvList_setAutoDelete;
extern(C) void* function(void* jarg1, uint jarg2) bvList_opIndex;
extern(C) uint function(void* jarg1, void* jarg2) bvList_swigOpEquals;
extern(C) void* function() new_TagLib_ByteVectorList__SWIG_0;
extern(C) void function(void* jarg1) delete_TagLib_ByteVectorList;
extern(C) void* function(void* jarg1) new_TagLib_ByteVectorList__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ByteVectorList_toByteVector__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_ByteVectorList_toByteVector__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2, int jarg3) TagLib_ByteVectorList_split__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ByteVectorList_split__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2, int jarg3, int jarg4) TagLib_ByteVectorList_split__SWIG_2;
extern(C) void* function(void* objectRef) TagLib_ByteVectorList_Upcast;
extern(C) void* function() new_strList__SWIG_0;
extern(C) void* function(void* jarg1) new_strList__SWIG_1;
extern(C) void function(void* jarg1) delete_strList;
extern(C) void* function(void* jarg1) strList_begin__SWIG_0;
extern(C) void* function(void* jarg1) strList_end__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2, char* jarg3) strList_insert;
extern(C) void* function(void* jarg1, char* jarg2, uint jarg3) strList_sortedInsert__SWIG_0;
extern(C) void* function(void* jarg1, char* jarg2) strList_sortedInsert__SWIG_1;
extern(C) void* function(void* jarg1, char* jarg2) strList_append__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) strList_append__SWIG_1;
extern(C) void* function(void* jarg1, char* jarg2) strList_prepend__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) strList_prepend__SWIG_1;
extern(C) void* function(void* jarg1) strList_clear;
extern(C) uint function(void* jarg1) strList_size;
extern(C) uint function(void* jarg1) strList_isEmpty;
extern(C) void* function(void* jarg1, char* jarg2) strList_find__SWIG_0;
extern(C) uint function(void* jarg1, char* jarg2) strList_contains;
extern(C) void* function(void* jarg1, void* jarg2) strList_erase;
extern(C) char* function(void* jarg1) strList_front__SWIG_0;
extern(C) char* function(void* jarg1) strList_back__SWIG_0;
extern(C) void function(void* jarg1, uint jarg2) strList_setAutoDelete;
extern(C) char* function(void* jarg1, uint jarg2) strList_opIndex;
extern(C) uint function(void* jarg1, void* jarg2) strList_swigOpEquals;
extern(C) void* function() new_TagLib_StringList__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_StringList__SWIG_1;
extern(C) void* function(char* jarg1) new_TagLib_StringList__SWIG_2;
extern(C) void* function(void* jarg1) new_TagLib_StringList__SWIG_3;
extern(C) void function(void* jarg1) delete_TagLib_StringList;
extern(C) char* function(void* jarg1, char* jarg2) TagLib_StringList_toWString__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_StringList_toWString__SWIG_1;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_StringList_append__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_StringList_append__SWIG_1;
extern(C) void* function(char* jarg1, char* jarg2) TagLib_StringList_split;
extern(C) void* function(void* objectRef) TagLib_StringList_Upcast;
extern(C) void function(void* jarg1) delete_TagLib_AudioProperties;
extern(C) int function(void* jarg1) TagLib_AudioProperties_length;
extern(C) int function(void* jarg1) TagLib_AudioProperties_bitrate;
extern(C) int function(void* jarg1) TagLib_AudioProperties_sampleRate;
extern(C) int function(void* jarg1) TagLib_AudioProperties_channels;
extern(C) void function(void* jarg1) delete_TagLib_Tag;
extern(C) char* function(void* jarg1) TagLib_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Tag_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_Tag_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Tag_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Tag_track__SWIG_1;
extern(C) uint function(void* jarg1) TagLib_Tag_isEmpty;
extern(C) void function(void* jarg1, void* jarg2, uint jarg3) TagLib_Tag_duplicate__SWIG_0;
extern(C) void function(void* jarg1, void* jarg2) TagLib_Tag_duplicate__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_File;
extern(C) const(char)* function(void* jarg1) TagLib_File_name;
extern(C) void* function(void* jarg1) TagLib_File_tag;
extern(C) void* function(void* jarg1) TagLib_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_File_save;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_File_readBlock;
extern(C) void function(void* jarg1, void* jarg2) TagLib_File_writeBlock;
extern(C) int function(void* jarg1, void* jarg2, int jarg3, void* jarg4) TagLib_File_find__SWIG_0;
extern(C) int function(void* jarg1, void* jarg2, int jarg3) TagLib_File_find__SWIG_1;
extern(C) int function(void* jarg1, void* jarg2) TagLib_File_find__SWIG_2;
extern(C) int function(void* jarg1, void* jarg2, int jarg3, void* jarg4) TagLib_File_rfind__SWIG_0;
extern(C) int function(void* jarg1, void* jarg2, int jarg3) TagLib_File_rfind__SWIG_1;
extern(C) int function(void* jarg1, void* jarg2) TagLib_File_rfind__SWIG_2;
extern(C) void function(void* jarg1, void* jarg2, uint jarg3, uint jarg4) TagLib_File_insert__SWIG_0;
extern(C) void function(void* jarg1, void* jarg2, uint jarg3) TagLib_File_insert__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2) TagLib_File_insert__SWIG_2;
extern(C) void function(void* jarg1, uint jarg2, uint jarg3) TagLib_File_removeBlock__SWIG_0;
extern(C) void function(void* jarg1, uint jarg2) TagLib_File_removeBlock__SWIG_1;
extern(C) void function(void* jarg1) TagLib_File_removeBlock__SWIG_2;
extern(C) uint function(void* jarg1) TagLib_File_readOnly;
extern(C) uint function(void* jarg1) TagLib_File_isOpen;
extern(C) uint function(void* jarg1) TagLib_File_isValid;
extern(C) void function(void* jarg1, int jarg2, int jarg3) TagLib_File_seek__SWIG_0;
extern(C) void function(void* jarg1, int jarg2) TagLib_File_seek__SWIG_1;
extern(C) void function(void* jarg1) TagLib_File_clear;
extern(C) int function(void* jarg1) TagLib_File_tell;
extern(C) int function(void* jarg1) TagLib_File_length;
extern(C) uint function(const(char)* jarg1) TagLib_File_isReadable;
extern(C) uint function(const(char)* jarg1) TagLib_File_isWritable;
alias extern(C) void* function(void*, const(char)* fileName, uint readAudioProperties, int audioPropertiesStyle) SwigDirector_FileTypeResolver_Callback0;
alias extern(C) void* function(void*, const(char)* fileName, uint readAudioProperties) SwigDirector_FileTypeResolver_Callback1;
alias extern(C) void* function(void*, const(char)* fileName) SwigDirector_FileTypeResolver_Callback2;
extern(C) void* function(void* jarg1, const(char)* jarg2, uint jarg3, int jarg4) FileTypeResolver_createFile__SWIG_0;
extern(C) void* function(void* jarg1, const(char)* jarg2, uint jarg3) FileTypeResolver_createFile__SWIG_1;
extern(C) void* function(void* jarg1, const(char)* jarg2) FileTypeResolver_createFile__SWIG_2;
extern(C) void* function() new_FileTypeResolver;
extern(C) void function(void* jarg1) delete_FileTypeResolver;
extern(C) void function(void* cObject, void* dObject, SwigDirector_FileTypeResolver_Callback0 callback0, SwigDirector_FileTypeResolver_Callback1 callback1, SwigDirector_FileTypeResolver_Callback2 callback2) FileTypeResolver_director_connect;
extern(C) void* function() new_TagLib_CPP_FileRef__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_CPP_FileRef__SWIG_1;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_CPP_FileRef__SWIG_2;
extern(C) void* function(const(char)* jarg1) new_TagLib_CPP_FileRef__SWIG_3;
extern(C) void* function(void* jarg1) new_TagLib_CPP_FileRef__SWIG_4;
extern(C) void* function(void* jarg1) new_TagLib_CPP_FileRef__SWIG_5;
extern(C) void function(void* jarg1) delete_TagLib_CPP_FileRef;
extern(C) void* function(void* jarg1) TagLib_CPP_FileRef_tag;
extern(C) void* function(void* jarg1) TagLib_CPP_FileRef_audioProperties;
extern(C) void* function(void* jarg1) TagLib_CPP_FileRef_file;
extern(C) uint function(void* jarg1) TagLib_CPP_FileRef_save;
extern(C) void* function(void* jarg1) TagLib_CPP_FileRef_addFileTypeResolver;
extern(C) void* function() TagLib_CPP_FileRef_defaultFileExtensions;
extern(C) uint function(void* jarg1) TagLib_CPP_FileRef_isNull;
extern(C) uint function(void* jarg1, void* jarg2) TagLib_CPP_FileRef_swigOpEquals;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) TagLib_CPP_FileRef_create__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) TagLib_CPP_FileRef_create__SWIG_1;
extern(C) void* function(const(char)* jarg1) TagLib_CPP_FileRef_create__SWIG_2;
extern(C) void* function() new_TagLib_APE_Footer__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_APE_Footer__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_APE_Footer;
extern(C) uint function(void* jarg1) TagLib_APE_Footer__version;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_headerPresent;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_footerPresent;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_isHeader;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Footer_setHeaderPresent;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_itemCount;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Footer_setItemCount;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_tagSize;
extern(C) uint function(void* jarg1) TagLib_APE_Footer_completeTagSize;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Footer_setTagSize;
extern(C) uint function() TagLib_APE_Footer_size;
extern(C) void* function() TagLib_APE_Footer_fileIdentifier;
extern(C) void function(void* jarg1, void* jarg2) TagLib_APE_Footer_setData;
extern(C) void* function(void* jarg1) TagLib_APE_Footer_renderFooter;
extern(C) void* function(void* jarg1) TagLib_APE_Footer_renderHeader;
extern(C) void* function() new_TagLib_APE_Item__SWIG_0;
extern(C) void* function(char* jarg1, char* jarg2) new_TagLib_APE_Item__SWIG_1;
extern(C) void* function(char* jarg1, void* jarg2) new_TagLib_APE_Item__SWIG_2;
extern(C) void* function(void* jarg1) new_TagLib_APE_Item__SWIG_3;
extern(C) void function(void* jarg1) delete_TagLib_APE_Item;
extern(C) char* function(void* jarg1) TagLib_APE_Item_key;
extern(C) void* function(void* jarg1) TagLib_APE_Item_value;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Item_setKey;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Item_setValue;
extern(C) void function(void* jarg1, void* jarg2) TagLib_APE_Item_setValues;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Item_appendValue;
extern(C) void function(void* jarg1, void* jarg2) TagLib_APE_Item_appendValues;
extern(C) int function(void* jarg1) TagLib_APE_Item_size;
extern(C) char* function(void* jarg1) TagLib_APE_Item_toString;
extern(C) void* function(void* jarg1) TagLib_APE_Item_toStringList;
extern(C) void* function(void* jarg1) TagLib_APE_Item_values;
extern(C) void* function(void* jarg1) TagLib_APE_Item_render;
extern(C) void function(void* jarg1, void* jarg2) TagLib_APE_Item_parse;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Item_setReadOnly;
extern(C) uint function(void* jarg1) TagLib_APE_Item_isReadOnly;
extern(C) void function(void* jarg1, int jarg2) TagLib_APE_Item_setType;
extern(C) int function(void* jarg1) TagLib_APE_Item_type;
extern(C) uint function(void* jarg1) TagLib_APE_Item_isEmpty;
extern(C) void* function() new_TagLib_APE_Tag__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_APE_Tag__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_APE_Tag;
extern(C) void* function(void* jarg1) TagLib_APE_Tag_render;
extern(C) void* function() TagLib_APE_Tag_fileIdentifier;
extern(C) char* function(void* jarg1) TagLib_APE_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_APE_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_APE_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_APE_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_APE_Tag_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_APE_Tag_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_APE_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Tag_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_APE_Tag_track__SWIG_1;
extern(C) void* function(void* jarg1) TagLib_APE_Tag_footer;
extern(C) void function(void* jarg1, char* jarg2) TagLib_APE_Tag_removeItem;
extern(C) void function(void* jarg1, char* jarg2, char* jarg3, uint jarg4) TagLib_APE_Tag_addValue__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2, char* jarg3) TagLib_APE_Tag_addValue__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2, void* jarg3) TagLib_APE_Tag_setItem;
extern(C) void* function(void* objectRef) TagLib_APE_Tag_Upcast;
extern(C) void* function() new_TagLib_ASF_Attribute__SWIG_0;
extern(C) void* function(char* jarg1) new_TagLib_ASF_Attribute__SWIG_1;
extern(C) void* function(void* jarg1) new_TagLib_ASF_Attribute__SWIG_2;
extern(C) void* function(uint jarg1) new_TagLib_ASF_Attribute__SWIG_3;
extern(C) void* function(ulong jarg1) new_TagLib_ASF_Attribute__SWIG_4;
extern(C) void* function(ushort jarg1) new_TagLib_ASF_Attribute__SWIG_5;
extern(C) void* function(uint jarg1) new_TagLib_ASF_Attribute__SWIG_6;
extern(C) void* function(void* jarg1) new_TagLib_ASF_Attribute__SWIG_7;
extern(C) void function(void* jarg1) delete_TagLib_ASF_Attribute;
extern(C) int function(void* jarg1) TagLib_ASF_Attribute_type;
extern(C) ushort function(void* jarg1) TagLib_ASF_Attribute_toBool;
extern(C) ushort function(void* jarg1) TagLib_ASF_Attribute_toUShort;
extern(C) uint function(void* jarg1) TagLib_ASF_Attribute_toUInt;
extern(C) ulong function(void* jarg1) TagLib_ASF_Attribute_toULongLong;
extern(C) char* function(void* jarg1) TagLib_ASF_Attribute_toString;
extern(C) void* function(void* jarg1) TagLib_ASF_Attribute_toByteVector;
extern(C) int function(void* jarg1) TagLib_ASF_Attribute_language;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Attribute_setLanguage;
extern(C) int function(void* jarg1) TagLib_ASF_Attribute_stream;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Attribute_setStream;
extern(C) int function(void* jarg1) TagLib_ASF_Attribute_dataSize;
extern(C) void* function() new_TagLib_ASF_Properties;
extern(C) void function(void* jarg1) delete_TagLib_ASF_Properties;
extern(C) int function(void* jarg1) TagLib_ASF_Properties_length;
extern(C) int function(void* jarg1) TagLib_ASF_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_ASF_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_ASF_Properties_channels;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Properties_setLength;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Properties_setBitrate;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Properties_setSampleRate;
extern(C) void function(void* jarg1, int jarg2) TagLib_ASF_Properties_setChannels;
extern(C) void* function(void* objectRef) TagLib_ASF_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_ASF_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_ASF_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_ASF_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_ASF_File;
extern(C) void* function(void* jarg1) TagLib_ASF_File_tag;
extern(C) void* function(void* jarg1) TagLib_ASF_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_ASF_File_save;
extern(C) void* function(void* objectRef) TagLib_ASF_File_Upcast;
extern(C) void* function() new_TagLib_ASF_Tag;
extern(C) void function(void* jarg1) delete_TagLib_ASF_Tag;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_genre__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_rating;
extern(C) char* function(void* jarg1) TagLib_ASF_Tag_copyright;
extern(C) uint function(void* jarg1) TagLib_ASF_Tag_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ASF_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_setRating;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_setCopyright;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ASF_Tag_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ASF_Tag_track__SWIG_1;
extern(C) uint function(void* jarg1) TagLib_ASF_Tag_isEmpty;
extern(C) void* function(void* jarg1) TagLib_ASF_Tag_attributeListMap;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ASF_Tag_removeItem;
extern(C) void function(void* jarg1, char* jarg2, void* jarg3) TagLib_ASF_Tag_setAttribute;
extern(C) void function(void* jarg1, char* jarg2, void* jarg3) TagLib_ASF_Tag_addAttribute;
extern(C) void* function(void* objectRef) TagLib_ASF_Tag_Upcast;
extern(C) void* function(void* jarg1, int jarg2, int jarg3) new_TagLib_FLAC_Properties__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_FLAC_Properties__SWIG_1;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_FLAC_Properties__SWIG_2;
extern(C) void* function(void* jarg1) new_TagLib_FLAC_Properties__SWIG_3;
extern(C) void function(void* jarg1) delete_TagLib_FLAC_Properties;
extern(C) int function(void* jarg1) TagLib_FLAC_Properties_length;
extern(C) int function(void* jarg1) TagLib_FLAC_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_FLAC_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_FLAC_Properties_channels;
extern(C) int function(void* jarg1) TagLib_FLAC_Properties_sampleWidth;
extern(C) void* function(void* objectRef) TagLib_FLAC_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_FLAC_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_FLAC_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_FLAC_File__SWIG_2;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3, int jarg4) new_TagLib_FLAC_File__SWIG_3;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3) new_TagLib_FLAC_File__SWIG_4;
extern(C) void* function(const(char)* jarg1, void* jarg2) new_TagLib_FLAC_File__SWIG_5;
extern(C) void function(void* jarg1) delete_TagLib_FLAC_File;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_tag;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_FLAC_File_save;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_FLAC_File_ID3v2Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_ID3v2Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_FLAC_File_ID3v1Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_ID3v1Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_FLAC_File_xiphComment__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_xiphComment__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2) TagLib_FLAC_File_setID3v2FrameFactory;
extern(C) void* function(void* jarg1) TagLib_FLAC_File_streamInfoData;
extern(C) int function(void* jarg1) TagLib_FLAC_File_streamLength;
extern(C) void* function(void* objectRef) TagLib_FLAC_File_Upcast;
extern(C) void* function() new_TagLib_genreMap__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_genreMap__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_genreMap;
extern(C) void* function(void* jarg1) TagLib_genreMap_begin__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_genreMap_end__SWIG_0;
extern(C) void* function(void* jarg1, char* jarg2, int jarg3) TagLib_genreMap_insert;
extern(C) void* function(void* jarg1) TagLib_genreMap_clear;
extern(C) uint function(void* jarg1) TagLib_genreMap_size;
extern(C) uint function(void* jarg1) TagLib_genreMap_isEmpty;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_genreMap_find__SWIG_0;
extern(C) uint function(void* jarg1, char* jarg2) TagLib_genreMap_contains;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_genreMap_erase__SWIG_0;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_genreMap_erase__SWIG_1;
extern(C) int function(void* jarg1, char* jarg2) TagLib_genreMap_opIndex__SWIG_0;
extern(C) void* function() genreList;
extern(C) void* function() genreMap;
extern(C) char* function(int jarg1) genre;
extern(C) int function(char* jarg1) genreIndex;
extern(C) char* function(void* jarg1, void* jarg2) TagLib_ID3v1_StringHandler_parse;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_ID3v1_StringHandler_render;
extern(C) void* function() new_TagLib_ID3v1_StringHandler;
extern(C) void function(void* jarg1) delete_TagLib_ID3v1_StringHandler;
extern(C) void* function() new_TagLib_ID3v1_Tag__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_ID3v1_Tag__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v1_Tag;
extern(C) void* function(void* jarg1) TagLib_ID3v1_Tag_render;
extern(C) void* function() TagLib_ID3v1_Tag_fileIdentifier;
extern(C) char* function(void* jarg1) TagLib_ID3v1_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v1_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v1_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v1_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v1_Tag_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ID3v1_Tag_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ID3v1_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v1_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v1_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v1_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v1_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v1_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v1_Tag_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v1_Tag_track__SWIG_1;
extern(C) void function(void* jarg1) TagLib_ID3v1_Tag_setStringHandler;
extern(C) void* function(void* objectRef) TagLib_ID3v1_Tag_Upcast;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_Frame;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Frame_frameID;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Frame_size;
extern(C) uint function() TagLib_ID3v2_Frame_headerSize__SWIG_0;
extern(C) uint function(uint jarg1) TagLib_ID3v2_Frame_headerSize__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_Frame_setData;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Frame_setText;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Frame_toString;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Frame_render;
extern(C) void* function() new_TagLib_ID3v2_Header__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_Header__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_Header;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_majorVersion;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v2_Header_setMajorVersion;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_revisionNumber;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_unsynchronisation;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_extendedHeader;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_experimentalIndicator;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_footerPresent;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_tagSize;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Header_completeTagSize;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v2_Header_setTagSize;
extern(C) uint function() TagLib_ID3v2_Header_size;
extern(C) void* function() TagLib_ID3v2_Header_fileIdentifier;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_Header_setData;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Header_render;
extern(C) void* function() new_TagLib_ID3v2_ExtendedHeader;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_ExtendedHeader;
extern(C) uint function(void* jarg1) TagLib_ID3v2_ExtendedHeader_size;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_ExtendedHeader_setData;
extern(C) void* function() new_TagLib_ID3v2_Footer;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_Footer;
extern(C) uint function() TagLib_ID3v2_Footer_size;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ID3v2_Footer_render;
extern(C) void* function() TagLib_ID3v2_FrameFactory_instance;
extern(C) void* function(void* jarg1, void* jarg2, uint jarg3) TagLib_ID3v2_FrameFactory_createFrame__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2, uint jarg3) TagLib_ID3v2_FrameFactory_createFrame__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ID3v2_FrameFactory_createFrame__SWIG_2;
extern(C) void* function(void* jarg1, void* jarg2, void* jarg3) TagLib_ID3v2_FrameFactory_createFrame__SWIG_3;
extern(C) void* function() new_frameList__SWIG_0;
extern(C) void* function(void* jarg1) new_frameList__SWIG_1;
extern(C) void function(void* jarg1) delete_frameList;
extern(C) void* function(void* jarg1) frameList_begin__SWIG_0;
extern(C) void* function(void* jarg1) frameList_end__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2, void* jarg3) frameList_insert;
extern(C) void* function(void* jarg1, void* jarg2, uint jarg3) frameList_sortedInsert__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) frameList_sortedInsert__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) frameList_append__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) frameList_append__SWIG_1;
extern(C) void* function(void* jarg1, void* jarg2) frameList_prepend__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) frameList_prepend__SWIG_1;
extern(C) void* function(void* jarg1) frameList_clear;
extern(C) uint function(void* jarg1) frameList_size;
extern(C) uint function(void* jarg1) frameList_isEmpty;
extern(C) void* function(void* jarg1, void* jarg2) frameList_find__SWIG_0;
extern(C) uint function(void* jarg1, void* jarg2) frameList_contains;
extern(C) void* function(void* jarg1, void* jarg2) frameList_erase;
extern(C) void* function(void* jarg1) frameList_front__SWIG_0;
extern(C) void* function(void* jarg1) frameList_back__SWIG_0;
extern(C) void function(void* jarg1, uint jarg2) frameList_setAutoDelete;
extern(C) void* function(void* jarg1, uint jarg2) frameList_opIndex;
extern(C) uint function(void* jarg1, void* jarg2) frameList_swigOpEquals;
extern(C) void* function() new_TagLib_ID3v2_Tag__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2, void* jarg3) new_TagLib_ID3v2_Tag__SWIG_1;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_ID3v2_Tag__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_Tag;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_ID3v2_Tag_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Tag_year;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v2_Tag_Year;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v2_Tag_track__SWIG_1;
extern(C) uint function(void* jarg1) TagLib_ID3v2_Tag_isEmpty;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_header;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_extendedHeader;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_footer;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_frameListMap;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_frameList__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) TagLib_ID3v2_Tag_frameList__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_Tag_addFrame;
extern(C) void function(void* jarg1, void* jarg2, uint jarg3) TagLib_ID3v2_Tag_removeFrame__SWIG_0;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_Tag_removeFrame__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_Tag_removeFrames;
extern(C) void* function(void* jarg1) TagLib_ID3v2_Tag_render;
extern(C) void* function(void* objectRef) TagLib_ID3v2_Tag_Upcast;
extern(C) void* function() new_TagLib_ID3v2_AttachedPictureFrame__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_AttachedPictureFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_AttachedPictureFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_AttachedPictureFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_AttachedPictureFrame_mimeType;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_AttachedPictureFrame_setMimeType;
extern(C) int function(void* jarg1) TagLib_ID3v2_AttachedPictureFrame_type;
extern(C) void function(void* jarg1, int jarg2) TagLib_ID3v2_AttachedPictureFrame_setType;
extern(C) char* function(void* jarg1) TagLib_ID3v2_AttachedPictureFrame_description;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_AttachedPictureFrame_setDescription;
extern(C) void* function(void* jarg1) TagLib_ID3v2_AttachedPictureFrame_picture;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_AttachedPictureFrame_setPicture;
extern(C) void* function(void* objectRef) TagLib_ID3v2_AttachedPictureFrame_Upcast;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_AttachedPictureFrameV22;
extern(C) void* function(void* objectRef) TagLib_ID3v2_AttachedPictureFrameV22_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_CommentsFrame;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_CommentsFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_CommentsFrame_toString;
extern(C) void* function(void* jarg1) TagLib_ID3v2_CommentsFrame_language;
extern(C) char* function(void* jarg1) TagLib_ID3v2_CommentsFrame_description;
extern(C) char* function(void* jarg1) TagLib_ID3v2_CommentsFrame_text;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_CommentsFrame_setLanguage;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_CommentsFrame_setDescription;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_CommentsFrame_setText;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_ID3v2_CommentsFrame_findByDescription;
extern(C) void* function(void* objectRef) TagLib_ID3v2_CommentsFrame_Upcast;
extern(C) void* function() new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_GeneralEncapsulatedObjectFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_GeneralEncapsulatedObjectFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_mimeType;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setMimeType;
extern(C) char* function(void* jarg1) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_fileName;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setFileName;
extern(C) char* function(void* jarg1) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_description;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setDescription;
extern(C) void* function(void* jarg1) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_object;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_setObject;
extern(C) void* function(void* objectRef) TagLib_ID3v2_GeneralEncapsulatedObjectFrame_Upcast;
extern(C) void* function() new_TagLib_ID3v2_PopularimeterFrame__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_PopularimeterFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_PopularimeterFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_PopularimeterFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_PopularimeterFrame_email;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_PopularimeterFrame_setEmail;
extern(C) int function(void* jarg1) TagLib_ID3v2_PopularimeterFrame_rating;
extern(C) void function(void* jarg1, int jarg2) TagLib_ID3v2_PopularimeterFrame_setRating;
extern(C) uint function(void* jarg1) TagLib_ID3v2_PopularimeterFrame_counter;
extern(C) void function(void* jarg1, uint jarg2) TagLib_ID3v2_PopularimeterFrame_setCounter;
extern(C) void* function(void* objectRef) TagLib_ID3v2_PopularimeterFrame_Upcast;
extern(C) void* function() new_TagLib_ID3v2_PrivateFrame__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_PrivateFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_PrivateFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_PrivateFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_PrivateFrame_owner;
extern(C) void* function(void* jarg1) TagLib_ID3v2_PrivateFrame_data;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_PrivateFrame_setOwner;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_PrivateFrame_setData;
extern(C) void* function(void* objectRef) TagLib_ID3v2_PrivateFrame_Upcast;
extern(C) void* function() new_PeakVolume;
extern(C) void function(void* jarg1, ubyte jarg2) PeakVolume_bitsRepresentingPeak_set;
extern(C) ubyte function(void* jarg1) PeakVolume_bitsRepresentingPeak_get;
extern(C) void function(void* jarg1, void* jarg2) PeakVolume_peakVolume_set;
extern(C) void* function(void* jarg1) PeakVolume_peakVolume_get;
extern(C) void function(void* jarg1) delete_PeakVolume;
extern(C) void* function() new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_RelativeVolumeFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_RelativeVolumeFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_toString;
extern(C) void* function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_channels;
extern(C) int function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_channelType;
extern(C) void function(void* jarg1, int jarg2) TagLib_ID3v2_RelativeVolumeFrame_setChannelType;
extern(C) short function(void* jarg1, int jarg2) TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_0;
extern(C) short function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustmentIndex__SWIG_1;
extern(C) void function(void* jarg1, short jarg2, int jarg3) TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_0;
extern(C) void function(void* jarg1, short jarg2) TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustmentIndex__SWIG_1;
extern(C) float function(void* jarg1, int jarg2) TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_0;
extern(C) float function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_volumeAdjustment__SWIG_1;
extern(C) void function(void* jarg1, float jarg2, int jarg3) TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_0;
extern(C) void function(void* jarg1, float jarg2) TagLib_ID3v2_RelativeVolumeFrame_setVolumeAdjustment__SWIG_1;
extern(C) void* function(void* jarg1, int jarg2) TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_peakVolume__SWIG_1;
extern(C) void function(void* jarg1, void* jarg2, int jarg3) TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_0;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_RelativeVolumeFrame_setPeakVolume__SWIG_1;
extern(C) char* function(void* jarg1) TagLib_ID3v2_RelativeVolumeFrame_identification;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_RelativeVolumeFrame_setIdentification;
extern(C) void* function(void* objectRef) TagLib_ID3v2_RelativeVolumeFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_TextIdentificationFrame;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_TextIdentificationFrame;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_TextIdentificationFrame_setText__SWIG_1;
extern(C) char* function(void* jarg1) TagLib_ID3v2_TextIdentificationFrame_toString;
extern(C) void* function(void* jarg1) TagLib_ID3v2_TextIdentificationFrame_fieldList;
extern(C) void* function(void* objectRef) TagLib_ID3v2_TextIdentificationFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_UserTextIdentificationFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UserTextIdentificationFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UserTextIdentificationFrame_description;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UserTextIdentificationFrame_setDescription;
extern(C) void* function(void* jarg1) TagLib_ID3v2_UserTextIdentificationFrame_fieldList;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_0;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_UserTextIdentificationFrame_setText__SWIG_1;
extern(C) void* function(void* jarg1, char* jarg2) TagLib_ID3v2_UserTextIdentificationFrame_find;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_UserTextIdentificationFrame;
extern(C) void* function(void* objectRef) TagLib_ID3v2_UserTextIdentificationFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_0;
extern(C) void* function(char* jarg1, void* jarg2) new_TagLib_ID3v2_UniqueFileIdentifierFrame__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_UniqueFileIdentifierFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UniqueFileIdentifierFrame_owner;
extern(C) void* function(void* jarg1) TagLib_ID3v2_UniqueFileIdentifierFrame_identifier;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UniqueFileIdentifierFrame_setOwner;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_UniqueFileIdentifierFrame_setIdentifier;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UniqueFileIdentifierFrame_toString;
extern(C) void* function(void* objectRef) TagLib_ID3v2_UniqueFileIdentifierFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_UnsynchronizedLyricsFrame;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_UnsynchronizedLyricsFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UnsynchronizedLyricsFrame_toString;
extern(C) void* function(void* jarg1) TagLib_ID3v2_UnsynchronizedLyricsFrame_language;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UnsynchronizedLyricsFrame_description;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UnsynchronizedLyricsFrame_text;
extern(C) void function(void* jarg1, void* jarg2) TagLib_ID3v2_UnsynchronizedLyricsFrame_setLanguage;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UnsynchronizedLyricsFrame_setDescription;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UnsynchronizedLyricsFrame_setText;
extern(C) void* function(void* objectRef) TagLib_ID3v2_UnsynchronizedLyricsFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_UrlLinkFrame;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_UrlLinkFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UrlLinkFrame_url;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UrlLinkFrame_setUrl;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UrlLinkFrame_setText;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UrlLinkFrame_toString;
extern(C) void* function(void* objectRef) TagLib_ID3v2_UrlLinkFrame_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_ID3v2_UserUrlLinkFrame;
extern(C) void function(void* jarg1) delete_TagLib_ID3v2_UserUrlLinkFrame;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UserUrlLinkFrame_toString;
extern(C) char* function(void* jarg1) TagLib_ID3v2_UserUrlLinkFrame_description;
extern(C) void function(void* jarg1, char* jarg2) TagLib_ID3v2_UserUrlLinkFrame_setDescription;
extern(C) void* function(void* objectRef) TagLib_ID3v2_UserUrlLinkFrame_Upcast;
extern(C) uint function(void* jarg1) toUInt;
extern(C) void* function(uint jarg1) fromUInt;
extern(C) void* function(void* jarg1) decode;
extern(C) void* function(int jarg1, void* jarg2) new_TagLib_MP4_CoverArt__SWIG_0;
extern(C) void function(void* jarg1) delete_TagLib_MP4_CoverArt;
extern(C) void* function(void* jarg1) new_TagLib_MP4_CoverArt__SWIG_1;
extern(C) int function(void* jarg1) TagLib_MP4_CoverArt_format;
extern(C) void* function(void* jarg1) TagLib_MP4_CoverArt_data;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_MP4_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_MP4_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_MP4_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_MP4_File;
extern(C) void* function(void* jarg1) TagLib_MP4_File_tag;
extern(C) void* function(void* jarg1) TagLib_MP4_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_MP4_File_save;
extern(C) void* function(void* objectRef) TagLib_MP4_File_Upcast;
extern(C) void* function() new_TagLib_MP4_Item__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_MP4_Item__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_MP4_Item;
extern(C) void* function(int jarg1) new_TagLib_MP4_Item__SWIG_2;
extern(C) void* function(uint jarg1) new_TagLib_MP4_Item__SWIG_3;
extern(C) void* function(int jarg1, int jarg2) new_TagLib_MP4_Item__SWIG_4;
extern(C) void* function(void* jarg1) new_TagLib_MP4_Item__SWIG_5;
extern(C) void* function(void* jarg1) new_TagLib_MP4_Item__SWIG_6;
extern(C) int function(void* jarg1) TagLib_MP4_Item_toInt;
extern(C) uint function(void* jarg1) TagLib_MP4_Item_toBool;
extern(C) void* function(void* jarg1) TagLib_MP4_Item_toIntPair;
extern(C) void* function(void* jarg1) TagLib_MP4_Item_toStringList;
extern(C) void* function(void* jarg1) TagLib_MP4_Item_toCoverArtList;
extern(C) uint function(void* jarg1) TagLib_MP4_Item_isValid;
extern(C) void* function(void* jarg1, void* jarg2, int jarg3) new_TagLib_MP4_Properties__SWIG_0;
extern(C) void* function(void* jarg1, void* jarg2) new_TagLib_MP4_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_MP4_Properties;
extern(C) int function(void* jarg1) TagLib_MP4_Properties_length;
extern(C) int function(void* jarg1) TagLib_MP4_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_MP4_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_MP4_Properties_channels;
extern(C) int function(void* jarg1) TagLib_MP4_Properties_bitsPerSample;
extern(C) void* function(void* objectRef) TagLib_MP4_Properties_Upcast;
extern(C) void* function(void* jarg1, void* jarg2) new_TagLib_MP4_Tag;
extern(C) void function(void* jarg1) delete_TagLib_MP4_Tag;
extern(C) uint function(void* jarg1) TagLib_MP4_Tag_save;
extern(C) char* function(void* jarg1) TagLib_MP4_Tag_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_MP4_Tag_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_MP4_Tag_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_MP4_Tag_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_MP4_Tag_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_MP4_Tag_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_MP4_Tag_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_MP4_Tag_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_MP4_Tag_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_MP4_Tag_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_MP4_Tag_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_MP4_Tag_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_MP4_Tag_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_MP4_Tag_track__SWIG_1;
extern(C) void* function(void* jarg1) TagLib_MP4_Tag_itemListMap;
extern(C) void* function(void* objectRef) TagLib_MP4_Tag_Upcast;
extern(C) uint function() HeaderSize_get;
extern(C) void* function(void* jarg1, int jarg2, int jarg3) new_TagLib_MPC_Properties__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_MPC_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_MPC_Properties;
extern(C) int function(void* jarg1) TagLib_MPC_Properties_length;
extern(C) int function(void* jarg1) TagLib_MPC_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_MPC_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_MPC_Properties_channels;
extern(C) int function(void* jarg1) TagLib_MPC_Properties_mpcVersion;
extern(C) void* function(void* objectRef) TagLib_MPC_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_MPC_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_MPC_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_MPC_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_MPC_File;
extern(C) void* function(void* jarg1) TagLib_MPC_File_tag;
extern(C) void* function(void* jarg1) TagLib_MPC_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_MPC_File_save;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_MPC_File_ID3v1Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_MPC_File_ID3v1Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_MPC_File_APETag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_MPC_File_APETag__SWIG_1;
extern(C) void function(void* jarg1, int jarg2) TagLib_MPC_File_strip__SWIG_0;
extern(C) void function(void* jarg1) TagLib_MPC_File_strip__SWIG_1;
extern(C) void function(void* jarg1, int jarg2) TagLib_MPC_File_remove__SWIG_0;
extern(C) void function(void* jarg1) TagLib_MPC_File_remove__SWIG_1;
extern(C) void* function(void* objectRef) TagLib_MPC_File_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_MPEG_XingHeader;
extern(C) void function(void* jarg1) delete_TagLib_MPEG_XingHeader;
extern(C) uint function(void* jarg1) TagLib_MPEG_XingHeader_isValid;
extern(C) uint function(void* jarg1) TagLib_MPEG_XingHeader_totalFrames;
extern(C) uint function(void* jarg1) TagLib_MPEG_XingHeader_totalSize;
extern(C) int function(int jarg1, int jarg2) TagLib_MPEG_XingHeader_xingHeaderOffset;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_MPEG_Properties__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_MPEG_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_MPEG_Properties;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_length;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_channels;
extern(C) void* function(void* jarg1) TagLib_MPEG_Properties_xingHeader;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties__version;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_layer;
extern(C) uint function(void* jarg1) TagLib_MPEG_Properties_protectionEnabled;
extern(C) int function(void* jarg1) TagLib_MPEG_Properties_channelMode;
extern(C) uint function(void* jarg1) TagLib_MPEG_Properties_isCopyrighted;
extern(C) uint function(void* jarg1) TagLib_MPEG_Properties_isOriginal;
extern(C) void* function(void* objectRef) TagLib_MPEG_Properties_Upcast;
extern(C) void* function(void* jarg1) new_TagLib_MPEG_Header__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_MPEG_Header__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_MPEG_Header;
extern(C) uint function(void* jarg1) TagLib_MPEG_Header_isValid;
extern(C) int function(void* jarg1) TagLib_MPEG_Header__version;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_layer;
extern(C) uint function(void* jarg1) TagLib_MPEG_Header_protectionEnabled;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_bitrate;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_sampleRate;
extern(C) uint function(void* jarg1) TagLib_MPEG_Header_isPadded;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_channelMode;
extern(C) uint function(void* jarg1) TagLib_MPEG_Header_isCopyrighted;
extern(C) uint function(void* jarg1) TagLib_MPEG_Header_isOriginal;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_frameLength;
extern(C) int function(void* jarg1) TagLib_MPEG_Header_samplesPerFrame;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_MPEG_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_MPEG_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_MPEG_File__SWIG_2;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3, int jarg4) new_TagLib_MPEG_File__SWIG_3;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3) new_TagLib_MPEG_File__SWIG_4;
extern(C) void* function(const(char)* jarg1, void* jarg2) new_TagLib_MPEG_File__SWIG_5;
extern(C) void function(void* jarg1) delete_TagLib_MPEG_File;
extern(C) void* function(void* jarg1) TagLib_MPEG_File_tag;
extern(C) void* function(void* jarg1) TagLib_MPEG_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_MPEG_File_save__SWIG_0;
extern(C) uint function(void* jarg1, int jarg2) TagLib_MPEG_File_save__SWIG_1;
extern(C) uint function(void* jarg1, int jarg2, uint jarg3) TagLib_MPEG_File_save__SWIG_2;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_MPEG_File_ID3v2Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_MPEG_File_ID3v2Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_MPEG_File_ID3v1Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_MPEG_File_ID3v1Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_MPEG_File_APETag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_MPEG_File_APETag__SWIG_1;
extern(C) uint function(void* jarg1, int jarg2) TagLib_MPEG_File_strip__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_MPEG_File_strip__SWIG_1;
extern(C) uint function(void* jarg1, int jarg2, uint jarg3) TagLib_MPEG_File_strip__SWIG_2;
extern(C) void function(void* jarg1, void* jarg2) TagLib_MPEG_File_setID3v2FrameFactory;
extern(C) int function(void* jarg1) TagLib_MPEG_File_firstFrameOffset;
extern(C) int function(void* jarg1, int jarg2) TagLib_MPEG_File_nextFrameOffset;
extern(C) int function(void* jarg1, int jarg2) TagLib_MPEG_File_previousFrameOffset;
extern(C) int function(void* jarg1) TagLib_MPEG_File_lastFrameOffset;
extern(C) void* function(void* objectRef) TagLib_MPEG_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_Ogg_Page;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_Page;
extern(C) int function(void* jarg1) TagLib_Ogg_Page_fileOffset;
extern(C) void* function(void* jarg1) TagLib_Ogg_Page_header;
extern(C) void* function(void* jarg1, int jarg2) TagLib_Ogg_Page_getCopyWithNewPageSequenceNumber;
extern(C) int function(void* jarg1) TagLib_Ogg_Page_firstPacketIndex;
extern(C) void function(void* jarg1, int jarg2) TagLib_Ogg_Page_setFirstPacketIndex;
extern(C) int function(void* jarg1, int jarg2) TagLib_Ogg_Page_containsPacket;
extern(C) uint function(void* jarg1) TagLib_Ogg_Page_packetCount;
extern(C) void* function(void* jarg1) TagLib_Ogg_Page_packets;
extern(C) int function(void* jarg1) TagLib_Ogg_Page_size;
extern(C) void* function(void* jarg1) TagLib_Ogg_Page_render;
extern(C) void* function(void* jarg1, int jarg2, uint jarg3, int jarg4, uint jarg5, uint jarg6, uint jarg7) TagLib_Ogg_Page_paginate__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2, uint jarg3, int jarg4, uint jarg5, uint jarg6) TagLib_Ogg_Page_paginate__SWIG_1;
extern(C) void* function(void* jarg1, int jarg2, uint jarg3, int jarg4, uint jarg5) TagLib_Ogg_Page_paginate__SWIG_2;
extern(C) void* function(void* jarg1, int jarg2, uint jarg3, int jarg4) TagLib_Ogg_Page_paginate__SWIG_3;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_Ogg_PageHeader__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_Ogg_PageHeader__SWIG_1;
extern(C) void* function() new_TagLib_Ogg_PageHeader__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_PageHeader;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_isValid;
extern(C) void* function(void* jarg1) TagLib_Ogg_PageHeader_packetSizes;
extern(C) void function(void* jarg1, void* jarg2) TagLib_Ogg_PageHeader_setPacketSizes;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_firstPacketContinued;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_PageHeader_setFirstPacketContinued;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_lastPacketCompleted;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_PageHeader_setLastPacketCompleted;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_firstPageOfStream;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_PageHeader_setFirstPageOfStream;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_lastPageOfStream;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_PageHeader_setLastPageOfStream;
extern(C) long function(void* jarg1) TagLib_Ogg_PageHeader_absoluteGranularPosition;
extern(C) void function(void* jarg1, long jarg2) TagLib_Ogg_PageHeader_setAbsoluteGranularPosition;
extern(C) uint function(void* jarg1) TagLib_Ogg_PageHeader_streamSerialNumber;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_PageHeader_setStreamSerialNumber;
extern(C) int function(void* jarg1) TagLib_Ogg_PageHeader_pageSequenceNumber;
extern(C) void function(void* jarg1, int jarg2) TagLib_Ogg_PageHeader_setPageSequenceNumber;
extern(C) int function(void* jarg1) TagLib_Ogg_PageHeader_size;
extern(C) int function(void* jarg1) TagLib_Ogg_PageHeader_dataSize;
extern(C) void* function(void* jarg1) TagLib_Ogg_PageHeader_render;
extern(C) void* function() new_TagLib_Ogg_XiphComment__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_Ogg_XiphComment__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_XiphComment;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_title__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_artist__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_album__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_comment__SWIG_0;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_genre__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_Ogg_XiphComment_year__SWIG_0;
extern(C) uint function(void* jarg1) TagLib_Ogg_XiphComment_track__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_title__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_artist__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_album__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_comment__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_genre__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_XiphComment_year__SWIG_1;
extern(C) void function(void* jarg1, uint jarg2) TagLib_Ogg_XiphComment_track__SWIG_1;
extern(C) uint function(void* jarg1) TagLib_Ogg_XiphComment_isEmpty;
extern(C) uint function(void* jarg1) TagLib_Ogg_XiphComment_fieldCount;
extern(C) void* function(void* jarg1) TagLib_Ogg_XiphComment_fieldListMap;
extern(C) char* function(void* jarg1) TagLib_Ogg_XiphComment_vendorID;
extern(C) void function(void* jarg1, char* jarg2, char* jarg3, uint jarg4) TagLib_Ogg_XiphComment_addField__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2, char* jarg3) TagLib_Ogg_XiphComment_addField__SWIG_1;
extern(C) void function(void* jarg1, char* jarg2, char* jarg3) TagLib_Ogg_XiphComment_removeField__SWIG_0;
extern(C) void function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_removeField__SWIG_1;
extern(C) uint function(void* jarg1, char* jarg2) TagLib_Ogg_XiphComment_contains;
extern(C) void* function(void* jarg1) TagLib_Ogg_XiphComment_render__SWIG_0;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_Ogg_XiphComment_render__SWIG_1;
extern(C) void* function(void* objectRef) TagLib_Ogg_XiphComment_Upcast;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_File;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_Ogg_File_packet;
extern(C) void function(void* jarg1, uint jarg2, void* jarg3) TagLib_Ogg_File_setPacket;
extern(C) void* function(void* jarg1) TagLib_Ogg_File_firstPageHeader;
extern(C) void* function(void* jarg1) TagLib_Ogg_File_lastPageHeader;
extern(C) uint function(void* jarg1) TagLib_Ogg_File_save;
extern(C) void* function(void* objectRef) TagLib_Ogg_File_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_Ogg_FLAC_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_Ogg_FLAC_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_Ogg_FLAC_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_FLAC_File;
extern(C) void* function(void* jarg1) TagLib_Ogg_FLAC_File_tag;
extern(C) void* function(void* jarg1) TagLib_Ogg_FLAC_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_Ogg_FLAC_File_save;
extern(C) int function(void* jarg1) TagLib_Ogg_FLAC_File_streamLength;
extern(C) void* function(void* objectRef) TagLib_Ogg_FLAC_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_Ogg_Speex_Properties__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_Ogg_Speex_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_Speex_Properties;
extern(C) int function(void* jarg1) TagLib_Ogg_Speex_Properties_length;
extern(C) int function(void* jarg1) TagLib_Ogg_Speex_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_Ogg_Speex_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_Ogg_Speex_Properties_channels;
extern(C) int function(void* jarg1) TagLib_Ogg_Speex_Properties_speexVersion;
extern(C) void* function(void* objectRef) TagLib_Ogg_Speex_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_Ogg_Speex_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_Ogg_Speex_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_Ogg_Speex_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_Ogg_Speex_File;
extern(C) void* function(void* jarg1) TagLib_Ogg_Speex_File_tag;
extern(C) void* function(void* jarg1) TagLib_Ogg_Speex_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_Ogg_Speex_File_save;
extern(C) void* function(void* objectRef) TagLib_Ogg_Speex_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_Vorbis_Properties__SWIG_0;
extern(C) void* function(void* jarg1) new_TagLib_Vorbis_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_Vorbis_Properties;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_length;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_channels;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_vorbisVersion;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_bitrateMaximum;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_bitrateNominal;
extern(C) int function(void* jarg1) TagLib_Vorbis_Properties_bitrateMinimum;
extern(C) void* function(void* objectRef) TagLib_Vorbis_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_Vorbis_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_Vorbis_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_Vorbis_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_Vorbis_File;
extern(C) void* function(void* jarg1) TagLib_Vorbis_File_tag;
extern(C) void* function(void* jarg1) TagLib_Vorbis_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_Vorbis_File_save;
extern(C) void* function(void* objectRef) TagLib_Vorbis_File_Upcast;
extern(C) void function(void* jarg1) delete_TagLib_RIFF_File;
extern(C) void* function(void* objectRef) TagLib_RIFF_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_RIFF_AIFF_Properties;
extern(C) void function(void* jarg1) delete_TagLib_RIFF_AIFF_Properties;
extern(C) int function(void* jarg1) TagLib_RIFF_AIFF_Properties_length;
extern(C) int function(void* jarg1) TagLib_RIFF_AIFF_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_RIFF_AIFF_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_RIFF_AIFF_Properties_channels;
extern(C) void* function(void* objectRef) TagLib_RIFF_AIFF_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_RIFF_AIFF_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_RIFF_AIFF_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_RIFF_AIFF_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_RIFF_AIFF_File;
extern(C) void* function(void* jarg1) TagLib_RIFF_AIFF_File_tag;
extern(C) void* function(void* jarg1) TagLib_RIFF_AIFF_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_RIFF_AIFF_File_save;
extern(C) void* function(void* objectRef) TagLib_RIFF_AIFF_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_RIFF_WAV_Properties;
extern(C) void function(void* jarg1) delete_TagLib_RIFF_WAV_Properties;
extern(C) int function(void* jarg1) TagLib_RIFF_WAV_Properties_length;
extern(C) int function(void* jarg1) TagLib_RIFF_WAV_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_RIFF_WAV_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_RIFF_WAV_Properties_channels;
extern(C) void* function(void* objectRef) TagLib_RIFF_WAV_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_RIFF_WAV_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_RIFF_WAV_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_RIFF_WAV_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_RIFF_WAV_File;
extern(C) void* function(void* jarg1) TagLib_RIFF_WAV_File_tag;
extern(C) void* function(void* jarg1) TagLib_RIFF_WAV_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_RIFF_WAV_File_save;
extern(C) void* function(void* objectRef) TagLib_RIFF_WAV_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2, int jarg3) new_TagLib_TrueAudio_Properties__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_TrueAudio_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_TrueAudio_Properties;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_length;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_channels;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_bitsPerSample;
extern(C) int function(void* jarg1) TagLib_TrueAudio_Properties_ttaVersion;
extern(C) void* function(void* objectRef) TagLib_TrueAudio_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_TrueAudio_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_TrueAudio_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_TrueAudio_File__SWIG_2;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3, int jarg4) new_TagLib_TrueAudio_File__SWIG_3;
extern(C) void* function(const(char)* jarg1, void* jarg2, uint jarg3) new_TagLib_TrueAudio_File__SWIG_4;
extern(C) void* function(const(char)* jarg1, void* jarg2) new_TagLib_TrueAudio_File__SWIG_5;
extern(C) void function(void* jarg1) delete_TagLib_TrueAudio_File;
extern(C) void* function(void* jarg1) TagLib_TrueAudio_File_tag;
extern(C) void* function(void* jarg1) TagLib_TrueAudio_File_audioProperties;
extern(C) void function(void* jarg1, void* jarg2) TagLib_TrueAudio_File_setID3v2FrameFactory;
extern(C) uint function(void* jarg1) TagLib_TrueAudio_File_save;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_TrueAudio_File_ID3v1Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_TrueAudio_File_ID3v1Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_TrueAudio_File_ID3v2Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_TrueAudio_File_ID3v2Tag__SWIG_1;
extern(C) void function(void* jarg1, int jarg2) TagLib_TrueAudio_File_strip__SWIG_0;
extern(C) void function(void* jarg1) TagLib_TrueAudio_File_strip__SWIG_1;
extern(C) void* function(void* objectRef) TagLib_TrueAudio_File_Upcast;
extern(C) void* function(void* jarg1, int jarg2, int jarg3) new_TagLib_WavPack_Properties__SWIG_0;
extern(C) void* function(void* jarg1, int jarg2) new_TagLib_WavPack_Properties__SWIG_1;
extern(C) void function(void* jarg1) delete_TagLib_WavPack_Properties;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties_length;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties_bitrate;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties_sampleRate;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties_channels;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties_bitsPerSample;
extern(C) int function(void* jarg1) TagLib_WavPack_Properties__version;
extern(C) void* function(void* objectRef) TagLib_WavPack_Properties_Upcast;
extern(C) void* function(const(char)* jarg1, uint jarg2, int jarg3) new_TagLib_WavPack_File__SWIG_0;
extern(C) void* function(const(char)* jarg1, uint jarg2) new_TagLib_WavPack_File__SWIG_1;
extern(C) void* function(const(char)* jarg1) new_TagLib_WavPack_File__SWIG_2;
extern(C) void function(void* jarg1) delete_TagLib_WavPack_File;
extern(C) void* function(void* jarg1) TagLib_WavPack_File_tag;
extern(C) void* function(void* jarg1) TagLib_WavPack_File_audioProperties;
extern(C) uint function(void* jarg1) TagLib_WavPack_File_save;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_WavPack_File_ID3v1Tag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_WavPack_File_ID3v1Tag__SWIG_1;
extern(C) void* function(void* jarg1, uint jarg2) TagLib_WavPack_File_APETag__SWIG_0;
extern(C) void* function(void* jarg1) TagLib_WavPack_File_APETag__SWIG_1;
extern(C) void function(void* jarg1, int jarg2) TagLib_WavPack_File_strip__SWIG_0;
extern(C) void function(void* jarg1) TagLib_WavPack_File_strip__SWIG_1;
extern(C) void* function(void* objectRef) TagLib_WavPack_File_Upcast;
