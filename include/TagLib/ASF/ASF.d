/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module TagLib.ASF.ASF;

static import TagLibD_im;

static import std.conv;
static import std.string;
import std.conv;
import std.string;
import core.stdc.stdlib;
static import TagLib.TagLib;
static import TagLib.TagLib;
static import TagLib.TagLib;
static import TagLibD;
static import TagLib.TagLib;


class Attribute {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(Attribute obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin TagLibD_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          TagLibD_im.delete_TagLib_ASF_Attribute(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  enum AttributeTypes {
    UnicodeType = 0,
    BytesType = 1,
    BoolType = 2,
    DWordType = 3,
    QWordType = 4,
    WordType = 5,
    GuidType = 6
  }

  public this() {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_0(), true);
  }

  public this(string value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_1(cast(char*)toStringz(value)), true);
  }

  public this(TagLib.TagLib.ByteVector value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_2(TagLib.TagLib.ByteVector.swigGetCPtr(value)), true);
    if (TagLibD_im.SwigPendingException.isPending) throw TagLibD_im.SwigPendingException.retrieve();
  }

  public this(uint value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_3(value), true);
  }

  public this(ulong value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_4(value), true);
  }

  public this(ushort value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_5(value), true);
  }

  public this(bool value) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_6(value), true);
  }

  public this(Attribute item) {
    this(TagLibD_im.new_TagLib_ASF_Attribute__SWIG_7(Attribute.swigGetCPtr(item)), true);
    if (TagLibD_im.SwigPendingException.isPending) throw TagLibD_im.SwigPendingException.retrieve();
  }

  public Attribute.AttributeTypes type() const {
    Attribute.AttributeTypes ret = cast(Attribute.AttributeTypes)TagLibD_im.TagLib_ASF_Attribute_type(cast(void*)swigCPtr);
    return ret;
  }

  public ushort toBool() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_toBool(cast(void*)swigCPtr);
    return ret;
  }

  public ushort toUShort() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_toUShort(cast(void*)swigCPtr);
    return ret;
  }

  public uint toUInt() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_toUInt(cast(void*)swigCPtr);
    return ret;
  }

  public ulong toULongLong() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_toULongLong(cast(void*)swigCPtr);
    return ret;
  }

  public string toString() const {
        char* cstr = TagLibD_im.TagLib_ASF_Attribute_toString(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  public TagLib.TagLib.ByteVector toByteVector() const {
    TagLib.TagLib.ByteVector ret = new TagLib.TagLib.ByteVector(TagLibD_im.TagLib_ASF_Attribute_toByteVector(cast(void*)swigCPtr), true);
    return ret;
  }

  public int language() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_language(cast(void*)swigCPtr);
    return ret;
  }

  public void setLanguage(int value) {
    TagLibD_im.TagLib_ASF_Attribute_setLanguage(cast(void*)swigCPtr, value);
  }

  public int stream() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_stream(cast(void*)swigCPtr);
    return ret;
  }

  public void setStream(int value) {
    TagLibD_im.TagLib_ASF_Attribute_setStream(cast(void*)swigCPtr, value);
  }

  public int dataSize() const {
    auto ret = TagLibD_im.TagLib_ASF_Attribute_dataSize(cast(void*)swigCPtr);
    return ret;
  }
}

class Properties : TagLib.TagLib.AudioProperties {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(TagLibD_im.TagLib_ASF_Properties_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Properties obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin TagLibD_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          TagLibD_im.delete_TagLib_ASF_Properties(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(TagLibD_im.new_TagLib_ASF_Properties(), true);
  }

  @property int length() const {
    auto ret = TagLibD_im.TagLib_ASF_Properties_length(cast(void*)swigCPtr);
    return ret;
  }

  @property int bitrate() const {
    auto ret = TagLibD_im.TagLib_ASF_Properties_bitrate(cast(void*)swigCPtr);
    return ret;
  }

  @property int sampleRate() const {
    auto ret = TagLibD_im.TagLib_ASF_Properties_sampleRate(cast(void*)swigCPtr);
    return ret;
  }

  @property int channels() const {
    auto ret = TagLibD_im.TagLib_ASF_Properties_channels(cast(void*)swigCPtr);
    return ret;
  }

  public void setLength(int value) {
    TagLibD_im.TagLib_ASF_Properties_setLength(cast(void*)swigCPtr, value);
  }

  public void setBitrate(int value) {
    TagLibD_im.TagLib_ASF_Properties_setBitrate(cast(void*)swigCPtr, value);
  }

  public void setSampleRate(int value) {
    TagLibD_im.TagLib_ASF_Properties_setSampleRate(cast(void*)swigCPtr, value);
  }

  public void setChannels(int value) {
    TagLibD_im.TagLib_ASF_Properties_setChannels(cast(void*)swigCPtr, value);
  }
}

class File : TagLib.TagLib.File {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(TagLibD_im.TagLib_ASF_File_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(File obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin TagLibD_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          TagLibD_im.delete_TagLib_ASF_File(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this(string file, bool readProperties, TagLib.TagLib.AudioProperties.ReadStyle propertiesStyle) {
    this(TagLibD_im.new_TagLib_ASF_File__SWIG_0(std.string.toStringz(file), readProperties, cast(int)propertiesStyle), true);
  }

  public this(string file, bool readProperties) {
    this(TagLibD_im.new_TagLib_ASF_File__SWIG_1(std.string.toStringz(file), readProperties), true);
  }

  public this(string file) {
    this(TagLibD_im.new_TagLib_ASF_File__SWIG_2(std.string.toStringz(file)), true);
  }

  public override TagLib.TagLib.Tag tag() const {
    void* cPtr = TagLibD_im.TagLib_ASF_File_tag(cast(void*)swigCPtr);
    TagLib.TagLib.Tag ret = (cPtr is null) ? null : new TagLib.TagLib.Tag(cPtr, false);
    return ret;
  }

  public override Properties audioProperties() const {
    void* cPtr = TagLibD_im.TagLib_ASF_File_audioProperties(cast(void*)swigCPtr);
    Properties ret = (cPtr is null) ? null : new Properties(cPtr, false);
    return ret;
  }

  public override bool save() {
    bool ret = TagLibD_im.TagLib_ASF_File_save(cast(void*)swigCPtr) ? true : false;
    return ret;
  }
}

class Tag : TagLib.TagLib.Tag {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(TagLibD_im.TagLib_ASF_Tag_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Tag obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin TagLibD_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          TagLibD_im.delete_TagLib_ASF_Tag(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(TagLibD_im.new_TagLib_ASF_Tag(), true);
  }

  @property string title() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_title__SWIG_0(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  @property string artist() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_artist__SWIG_0(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  @property string album() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_album__SWIG_0(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  @property string comment() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_comment__SWIG_0(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  @property string genre() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_genre__SWIG_0(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  public string rating() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_rating(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  public string copyright() const {
        char* cstr = TagLibD_im.TagLib_ASF_Tag_copyright(cast(void*)swigCPtr);
        string tmp;
        try
            tmp = to!string(cstr);
        finally
            free(cstr);
        return tmp;
    }

  @property uint year() const {
    auto ret = TagLibD_im.TagLib_ASF_Tag_year__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  @property uint track() const {
    auto ret = TagLibD_im.TagLib_ASF_Tag_track__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  @property void title(string s) {
    TagLibD_im.TagLib_ASF_Tag_title__SWIG_1(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  @property void artist(string s) {
    TagLibD_im.TagLib_ASF_Tag_artist__SWIG_1(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  @property void album(string s) {
    TagLibD_im.TagLib_ASF_Tag_album__SWIG_1(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  @property void comment(string s) {
    TagLibD_im.TagLib_ASF_Tag_comment__SWIG_1(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  public void setRating(string s) {
    TagLibD_im.TagLib_ASF_Tag_setRating(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  public void setCopyright(string s) {
    TagLibD_im.TagLib_ASF_Tag_setCopyright(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  @property void genre(string s) {
    TagLibD_im.TagLib_ASF_Tag_genre__SWIG_1(cast(void*)swigCPtr, cast(char*)toStringz(s));
  }

  @property void year(uint i) {
    TagLibD_im.TagLib_ASF_Tag_year__SWIG_1(cast(void*)swigCPtr, i);
  }

  @property void track(uint i) {
    TagLibD_im.TagLib_ASF_Tag_track__SWIG_1(cast(void*)swigCPtr, i);
  }

  public override bool isEmpty() const {
    bool ret = TagLibD_im.TagLib_ASF_Tag_isEmpty(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public TagLibD.SWIGTYPE_p_TagLib__MapT_TagLib__String_TagLib__ListT_TagLib__ASF__Attribute_t_t attributeListMap() {
    TagLibD.SWIGTYPE_p_TagLib__MapT_TagLib__String_TagLib__ListT_TagLib__ASF__Attribute_t_t ret = new TagLibD.SWIGTYPE_p_TagLib__MapT_TagLib__String_TagLib__ListT_TagLib__ASF__Attribute_t_t(TagLibD_im.TagLib_ASF_Tag_attributeListMap(cast(void*)swigCPtr), false);
    return ret;
  }

  public void removeItem(string name) {
    TagLibD_im.TagLib_ASF_Tag_removeItem(cast(void*)swigCPtr, cast(char*)toStringz(name));
  }

  public void setAttribute(string name, Attribute attribute) {
    TagLibD_im.TagLib_ASF_Tag_setAttribute(cast(void*)swigCPtr, cast(char*)toStringz(name), Attribute.swigGetCPtr(attribute));
    if (TagLibD_im.SwigPendingException.isPending) throw TagLibD_im.SwigPendingException.retrieve();
  }

  public void addAttribute(string name, Attribute attribute) {
    TagLibD_im.TagLib_ASF_Tag_addAttribute(cast(void*)swigCPtr, cast(char*)toStringz(name), Attribute.swigGetCPtr(attribute));
    if (TagLibD_im.SwigPendingException.isPending) throw TagLibD_im.SwigPendingException.retrieve();
  }
}
